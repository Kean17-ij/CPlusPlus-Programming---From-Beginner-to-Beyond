std	C:\Users\George Calin\AppData\Roaming\codelite\tmp\codelite_templates.hpp	/^namespace std { template<typename _Tp> class shared_ptr {$/;"	namespace	line:1
shared_ptr	C:\Users\George Calin\AppData\Roaming\codelite\tmp\codelite_templates.hpp	/^namespace std { template<typename _Tp> class shared_ptr { $/;"	class	line:1	namespace:std
operator ->	C:\Users\George Calin\AppData\Roaming\codelite\tmp\codelite_templates.hpp	/^    _Tp* operator->();$/;"	prototype	line:2	class:std::shared_ptr	access:private	signature:()	returns:_Tp 
reset	C:\Users\George Calin\AppData\Roaming\codelite\tmp\codelite_templates.hpp	/^    void reset( Y* ptr );$/;"	prototype	line:3	class:std::shared_ptr	access:private	signature:( Y* ptr )	returns:void 
reset	C:\Users\George Calin\AppData\Roaming\codelite\tmp\codelite_templates.hpp	/^    void reset( Y* ptr, Deleter d );$/;"	prototype	line:4	class:std::shared_ptr	access:private	signature:( Y* ptr, Deleter d )	returns:void 
reset	C:\Users\George Calin\AppData\Roaming\codelite\tmp\codelite_templates.hpp	/^    void reset( Y* ptr, Deleter d, Alloc alloc );$/;"	prototype	line:5	class:std::shared_ptr	access:private	signature:( Y* ptr, Deleter d, Alloc alloc )	returns:void 
get	C:\Users\George Calin\AppData\Roaming\codelite\tmp\codelite_templates.hpp	/^    _T* get() const;$/;"	prototype	line:6	class:std::shared_ptr	access:private	signature:() const	returns:_T 

std	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\x86_64-w64-mingw32\bits\messages_members.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	namespace	line:36
messages	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\x86_64-w64-mingw32\bits\messages_members.h	/^     messages<_CharT>::messages(size_t __refs)$/;"	function	line:42	class:std::messages	signature:(size_t __refs)	returns:_GLIBCXX_BEGIN_NAMESPACE_VERSION template messages <_CharT> :: 
messages	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\x86_64-w64-mingw32\bits\messages_members.h	/^  template<typename _CharT>      messages<_CharT>::messages(__c_locale, const char*, size_t __refs) $/;"	function	line:47	class:std::messages	signature:(__c_locale, const char*, size_t __refs)	returns:template messages <_CharT> :: 
open	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\x86_64-w64-mingw32\bits\messages_members.h	/^  template<typename _CharT>     typename messages<_CharT>::catalog     messages<_CharT>::open(const basic_string<char>& __s, const locale& __loc, $/;"	function	line:53	class:std::messages	signature:(const basic_string<char>& __s, const locale& __loc, const char*) const	returns:template typename messages <_CharT> :: catalog messages <_CharT> :: 
~messages	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\x86_64-w64-mingw32\bits\messages_members.h	/^  template<typename _CharT>     messages<_CharT>::~messages() $/;"	function	line:59	class:std::messages	signature:()	returns:template messages <_CharT> :: 
do_open	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\x86_64-w64-mingw32\bits\messages_members.h	/^  template<typename _CharT>     typename messages<_CharT>::catalog     messages<_CharT>::do_open(const basic_string<char>&, const locale&) const $/;"	function	line:64	class:std::messages	signature:(const basic_string<char>&, const locale&) const	returns:template typename messages <_CharT> :: catalog messages <_CharT> :: 
do_get	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\x86_64-w64-mingw32\bits\messages_members.h	/^  template<typename _CharT>     typename messages<_CharT>::string_type     messages<_CharT>::do_get(catalog, int, int, $/;"	function	line:69	class:std::messages	signature:(catalog, int, int, const string_type& __dfault) const	returns:template typename messages <_CharT> :: string_type messages <_CharT> :: 
do_close	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\x86_64-w64-mingw32\bits\messages_members.h	/^  template<typename _CharT>     void     messages<_CharT>::do_close(catalog) const $/;"	function	line:75	class:std::messages	signature:(catalog) const	returns:template void messages <_CharT> :: 
messages_byname	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\x86_64-w64-mingw32\bits\messages_members.h	/^   template<typename _CharT>      messages_byname<_CharT>::messages_byname(const char* __s, size_t __refs) $/;"	function	line:80	class:std::messages_byname	signature:(const char* __s, size_t __refs)	returns:template messages_byname <_CharT> :: 







_LOCALE_CONV_H	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^#define _LOCALE_CONV_H 1$/;"	macro	line:31
std	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	namespace	line:43
__do_str_codecvt	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^    __do_str_codecvt(const _InChar* __first, const _InChar* __last,$/;"	function	line:55	namespace:std	signature:(const _InChar* __first, const _InChar* __last, _OutStr& __outstr, const _Codecvt& __cvt, _State& __state, size_t& __count, _Fn __fn)	returns:_GLIBCXX_BEGIN_NAMESPACE_VERSION template bool 
__str_codecvt_in	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^  template<typename _CharT, typename _Traits, typename _Alloc, typename _State>     inline bool     __str_codecvt_in(const char* __first, const char* __last, $/;"	function	line:106	namespace:std	signature:(const char* __first, const char* __last, basic_string<_CharT, _Traits, _Alloc>& __outstr, const codecvt<_CharT, char, _State>& __cvt, _State& __state, size_t& __count)	returns:template inline bool 
__str_codecvt_in	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^  template<typename _CharT, typename _Traits, typename _Alloc, typename _State>     inline bool     __str_codecvt_in(const char* __first, const char* __last, $/;"	function	line:123	namespace:std	signature:(const char* __first, const char* __last, basic_string<_CharT, _Traits, _Alloc>& __outstr, const codecvt<_CharT, char, _State>& __cvt)	returns:template inline bool 
__str_codecvt_out	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^  template<typename _CharT, typename _Traits, typename _Alloc, typename _State>     inline bool     __str_codecvt_out(const _CharT* __first, const _CharT* __last, $/;"	function	line:135	namespace:std	signature:(const _CharT* __first, const _CharT* __last, basic_string<char, _Traits, _Alloc>& __outstr, const codecvt<_CharT, char, _State>& __cvt, _State& __state, size_t& __count)	returns:template inline bool 
__str_codecvt_out	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^  template<typename _CharT, typename _Traits, typename _Alloc, typename _State>     inline bool     __str_codecvt_out(const _CharT* __first, const _CharT* __last, $/;"	function	line:152	namespace:std	signature:(const _CharT* __first, const _CharT* __last, basic_string<char, _Traits, _Alloc>& __outstr, const codecvt<_CharT, char, _State>& __cvt)	returns:template inline bool 
wstring_convert	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^    class wstring_convert$/;"	class	line:169	namespace:std
byte_string	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      typedef basic_string<char, char_traits<char>, _Byte_alloc>   byte_string; $/;"	typedef	line:172	class:std::wstring_convert	access:public
wide_string	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      typedef basic_string<_Elem, char_traits<_Elem>, _Wide_alloc> wide_string; $/;"	typedef	line:173	class:std::wstring_convert	access:public
state_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      typedef typename _Codecvt::state_type 			   state_type; $/;"	typedef	line:174	class:std::wstring_convert	access:public
int_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      typedef typename wide_string::traits_type::int_type	   int_type; $/;"	typedef	line:175	class:std::wstring_convert	access:public
wstring_convert	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      wstring_convert(_Codecvt* __pcvt = new _Codecvt()) : _M_cvt(__pcvt)$/;"	function	line:184	class:std::wstring_convert	access:public	signature:(_Codecvt* __pcvt = new _Codecvt())	returns:explicit 
wstring_convert	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      wstring_convert(_Codecvt* __pcvt, state_type __state)$/;"	function	line:198	class:std::wstring_convert	access:public	signature:(_Codecvt* __pcvt, state_type __state)
wstring_convert	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      wstring_convert(const byte_string& __byte_err,$/;"	function	line:211	class:std::wstring_convert	access:public	signature:(const byte_string& __byte_err, const wide_string& __wide_err = wide_string())	returns:explicit 
~wstring_convert	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      ~wstring_convert() = default;$/;"	prototype	line:221	class:std::wstring_convert	access:public	signature:()
wstring_convert	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      wstring_convert(const wstring_convert&) = delete;$/;"	prototype	line:225	class:std::wstring_convert	access:public	signature:(const wstring_convert&)
operator =	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      wstring_convert& operator=(const wstring_convert&) = delete;$/;"	prototype	line:226	class:std::wstring_convert	access:public	signature:(const wstring_convert&)	returns:wstring_convert 
from_bytes	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      from_bytes(char __byte)$/;"	function	line:230	class:std::wstring_convert	access:public	signature:(char __byte)	returns:wide_string 
from_bytes	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      from_bytes(const char* __ptr)$/;"	function	line:237	class:std::wstring_convert	access:public	signature:(const char* __ptr)	returns:wide_string 
from_bytes	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      from_bytes(const byte_string& __str)$/;"	function	line:241	class:std::wstring_convert	access:public	signature:(const byte_string& __str)	returns:wide_string 
from_bytes	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      from_bytes(const char* __first, const char* __last)$/;"	function	line:248	class:std::wstring_convert	access:public	signature:(const char* __first, const char* __last)	returns:wide_string 
to_bytes	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      to_bytes(_Elem __wchar)$/;"	function	line:264	class:std::wstring_convert	access:public	signature:(_Elem __wchar)	returns:byte_string 
to_bytes	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      to_bytes(const _Elem* __ptr)$/;"	function	line:271	class:std::wstring_convert	access:public	signature:(const _Elem* __ptr)	returns:byte_string 
to_bytes	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      to_bytes(const wide_string& __wstr)$/;"	function	line:277	class:std::wstring_convert	access:public	signature:(const wide_string& __wstr)	returns:byte_string 
to_bytes	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      to_bytes(const _Elem* __first, const _Elem* __last)$/;"	function	line:284	class:std::wstring_convert	access:public	signature:(const _Elem* __first, const _Elem* __last)	returns:byte_string 
state	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      state_type state() const { return _M_state; }$/;"	function	line:304	class:std::wstring_convert	access:public	signature:() const	returns:state_type 
_M_cvt	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      unique_ptr<_Codecvt>	_M_cvt;$/;"	member	line:307	class:std::wstring_convert	access:private
_M_byte_err_string	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      byte_string		_M_byte_err_string;$/;"	member	line:308	class:std::wstring_convert	access:private
_M_wide_err_string	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      wide_string		_M_wide_err_string;$/;"	member	line:309	class:std::wstring_convert	access:private
_M_state	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      state_type		_M_state = state_type();$/;"	member	line:310	class:std::wstring_convert	access:private
_M_count	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      size_t			_M_count = 0;$/;"	member	line:311	class:std::wstring_convert	access:private
_M_with_cvtstate	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      bool			_M_with_cvtstate = false;$/;"	member	line:312	class:std::wstring_convert	access:private
_M_with_strings	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      bool			_M_with_strings = false;$/;"	member	line:313	class:std::wstring_convert	access:private
wbuffer_convert	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^    class wbuffer_convert : public basic_streambuf<_Elem, _Tr>$/;"	class	line:321	namespace:std	inherits:basic_streambuf<_Elem,_Tr>
_Wide_streambuf	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      typedef basic_streambuf<_Elem, _Tr> _Wide_streambuf; $/;"	typedef	line:323	class:std::wbuffer_convert	access:private
state_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      typedef typename _Codecvt::state_type state_type; $/;"	typedef	line:326	class:std::wbuffer_convert	access:public
wbuffer_convert	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      wbuffer_convert(streambuf* __bytebuf = 0, _Codecvt* __pcvt = new _Codecvt,$/;"	function	line:337	class:std::wbuffer_convert	access:public	signature:(streambuf* __bytebuf = 0, _Codecvt* __pcvt = new _Codecvt, state_type __state = state_type())	returns:explicit 
~wbuffer_convert	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      ~wbuffer_convert() = default;$/;"	prototype	line:355	class:std::wbuffer_convert	access:public	signature:()
wbuffer_convert	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      wbuffer_convert(const wbuffer_convert&) = delete;$/;"	prototype	line:359	class:std::wbuffer_convert	access:public	signature:(const wbuffer_convert&)
operator =	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      wbuffer_convert& operator=(const wbuffer_convert&) = delete;$/;"	prototype	line:360	class:std::wbuffer_convert	access:public	signature:(const wbuffer_convert&)	returns:wbuffer_convert 
sync	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      sync()$/;"	function	line:377	class:std::wbuffer_convert	access:protected	signature:()	returns:int 
overflow	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      overflow(typename _Wide_streambuf::int_type __out)$/;"	function	line:381	class:std::wbuffer_convert	access:protected	signature:(typename _Wide_streambuf::int_type __out)	returns:typename _Wide_streambuf :: int_type 
underflow	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      underflow()$/;"	function	line:391	class:std::wbuffer_convert	access:protected	signature:()	returns:typename _Wide_streambuf :: int_type 
xsputn	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      xsputn(const typename _Wide_streambuf::char_type* __s, streamsize __n)$/;"	function	line:403	class:std::wbuffer_convert	access:protected	signature:(const typename _Wide_streambuf::char_type* __s, streamsize __n)	returns:streamsize 
_M_conv_get	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      _M_conv_get()$/;"	function	line:422	class:std::wbuffer_convert	access:private	signature:()	returns:bool 
_M_put	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      _M_put(...)$/;"	function	line:477	class:std::wbuffer_convert	access:private	signature:(....)	returns:bool 
_M_put	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      _M_put(const char* __p, streamsize __n)$/;"	function	line:481	class:std::wbuffer_convert	access:private	signature:(const char* __p, streamsize __n)	returns:bool 
_M_conv_put	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      _M_conv_put()$/;"	function	line:490	class:std::wbuffer_convert	access:private	signature:()	returns:bool 
_M_buf	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      streambuf*		_M_buf;$/;"	member	line:527	class:std::wbuffer_convert	access:private
_M_cvt	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      unique_ptr<_Codecvt>	_M_cvt;$/;"	member	line:528	class:std::wbuffer_convert	access:private
_M_state	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      state_type		_M_state;$/;"	member	line:529	class:std::wbuffer_convert	access:private
_S_buffer_length	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      static const streamsize	_S_buffer_length = 32;$/;"	member	line:531	class:std::wbuffer_convert	access:private
_S_putback_length	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      static const streamsize	_S_putback_length = 3;$/;"	member	line:532	class:std::wbuffer_convert	access:private
_M_put_area	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      _Elem                     _M_put_area[_S_buffer_length];$/;"	member	line:533	class:std::wbuffer_convert	access:private
_M_get_area	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      _Elem                     _M_get_area[_S_buffer_length];$/;"	member	line:534	class:std::wbuffer_convert	access:private
_M_unconv	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      streamsize		_M_unconv = 0;$/;"	member	line:535	class:std::wbuffer_convert	access:private
_M_get_buf	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      char			_M_get_buf[_S_buffer_length-_S_putback_length];$/;"	member	line:536	class:std::wbuffer_convert	access:private
_M_always_noconv	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_conv.h	/^      bool			_M_always_noconv;$/;"	member	line:537	class:std::wbuffer_convert	access:private










_STL_RELOPS_H	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\stl_relops.h	/^#define _STL_RELOPS_H 1$/;"	macro	line:65
std	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\stl_relops.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	namespace	line:67
rel_ops	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\stl_relops.h	/^  namespace rel_ops$/;"	namespace	line:71	namespace:std
operator !=	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\stl_relops.h	/^    template <class _Tp>       inline bool       operator!=(const _Tp& __x, const _Tp& __y) $/;"	function	line:87	namespace:std::rel_ops	signature:(const _Tp& __x, const _Tp& __y)	returns:template inline bool 
operator >	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\stl_relops.h	/^    template <class _Tp>       inline bool       operator>(const _Tp& __x, const _Tp& __y) $/;"	function	line:100	namespace:std::rel_ops	signature:(const _Tp& __x, const _Tp& __y)	returns:template inline bool 
operator <=	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\stl_relops.h	/^    template <class _Tp>       inline bool       operator<=(const _Tp& __x, const _Tp& __y) $/;"	function	line:113	namespace:std::rel_ops	signature:(const _Tp& __x, const _Tp& __y)	returns:template inline bool 
operator >=	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\stl_relops.h	/^    template <class _Tp>       inline bool       operator>=(const _Tp& __x, const _Tp& __y) $/;"	function	line:126	namespace:std::rel_ops	signature:(const _Tp& __x, const _Tp& __y)	returns:template inline bool 



std	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\x86_64-w64-mingw32\bits\time_members.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	namespace	line:37
__timepunct	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\x86_64-w64-mingw32\bits\time_members.h	/^    __timepunct<_CharT>::__timepunct(size_t __refs)$/;"	function	line:42	class:std::__timepunct	signature:(size_t __refs)	returns:_GLIBCXX_BEGIN_NAMESPACE_VERSION template __timepunct <_CharT> :: 
__timepunct	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\x86_64-w64-mingw32\bits\time_members.h	/^  template<typename _CharT>     __timepunct<_CharT>::__timepunct(__cache_type* __cache, size_t __refs) $/;"	function	line:50	class:std::__timepunct	signature:(__cache_type* __cache, size_t __refs)	returns:template __timepunct <_CharT> :: 
__timepunct	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\x86_64-w64-mingw32\bits\time_members.h	/^  template<typename _CharT>     __timepunct<_CharT>::__timepunct(__c_locale __cloc, const char* __s, $/;"	function	line:58	class:std::__timepunct	signature:(__c_locale __cloc, const char* __s, size_t __refs)	returns:template __timepunct <_CharT> :: 
~__timepunct	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\x86_64-w64-mingw32\bits\time_members.h	/^  template<typename _CharT>     __timepunct<_CharT>::~__timepunct() $/;"	function	line:83	class:std::__timepunct	signature:()	returns:template __timepunct <_CharT> :: 




_UNIQUE_PTR_H	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^#define _UNIQUE_PTR_H 1$/;"	macro	line:31
std	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	namespace	line:41
default_delete	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^  template<typename _Tp>     struct default_delete $/;"	struct	line:59	namespace:std
noexcept	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      constexpr default_delete() noexcept = default;$/;"	member	line:62	struct:std::default_delete	access:public
operator ()	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      operator()(_Tp* __ptr) const$/;"	function	line:75	struct:std::default_delete	access:public	signature:(_Tp* __ptr) const	returns:void 
default_delete	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^  template<typename _Tp>     struct default_delete<_Tp[]> $/;"	struct	line:89	namespace:std
noexcept	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      constexpr default_delete() noexcept = default;$/;"	member	line:93	struct:std::default_delete	access:public
operator ()	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      template<typename _Up>       typename enable_if<is_convertible<_Up(*)[], _Tp(*)[]>::value>::type 	operator()(_Up* __ptr) const $/;"	function	line:111	struct:std::default_delete	access:public	signature:(_Up* __ptr) const	returns:template typename enable_if <is_convertible<_Up(*)[], _Tp(*)[]>::value> :: type 
__uniq_ptr_impl	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^  template <typename _Tp, typename _Dp>     class __uniq_ptr_impl $/;"	class	line:120	namespace:std
_Ptr	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      template <typename _Up, typename _Ep, typename = void> 	struct _Ptr $/;"	struct	line:123	class:std::__uniq_ptr_impl	access:private
type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^	  using type = _Up*;$/;"	member	line:125	struct:std::__uniq_ptr_impl::_Ptr	typeref:class:type	access:public
_Ptr	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      template <typename _Up, typename _Ep> 	struct 	_Ptr<_Up, _Ep, __void_t<typename remove_reference<_Ep>::type::pointer>> $/;"	struct	line:130	class:std::__uniq_ptr_impl	access:private
type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^	  using type = typename remove_reference<_Ep>::type::pointer;$/;"	member	line:132	struct:std::__uniq_ptr_impl::_Ptr	typeref:class:type	access:public
_DeleterConstraint	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      using _DeleterConstraint = enable_if<$/;"	member	line:136	class:std::__uniq_ptr_impl	typeref:class:_DeleterConstraint	access:public
pointer	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      using pointer = typename _Ptr<_Tp, _Dp>::type;$/;"	member	line:140	class:std::__uniq_ptr_impl	typeref:class:pointer	access:public
__uniq_ptr_impl	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      __uniq_ptr_impl() = default;$/;"	prototype	line:142	class:std::__uniq_ptr_impl	access:public	signature:()
__uniq_ptr_impl	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }$/;"	function	line:143	class:std::__uniq_ptr_impl	access:public	signature:(pointer __p)
__uniq_ptr_impl	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      template<typename _Del>       __uniq_ptr_impl(pointer __p, _Del&& __d) $/;"	function	line:146	class:std::__uniq_ptr_impl	access:public	signature:(pointer __p, _Del&& __d)	returns:template 
_M_ptr	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      pointer&   _M_ptr() { return std::get<0>(_M_t); }$/;"	function	line:149	class:std::__uniq_ptr_impl	access:public	signature:()	returns:pointer 
_M_ptr	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      pointer    _M_ptr() const { return std::get<0>(_M_t); }$/;"	function	line:150	class:std::__uniq_ptr_impl	access:public	signature:() const	returns:pointer 
_M_deleter	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      _Dp&       _M_deleter() { return std::get<1>(_M_t); }$/;"	function	line:151	class:std::__uniq_ptr_impl	access:public	signature:()	returns:_Dp 
_M_deleter	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      const _Dp& _M_deleter() const { return std::get<1>(_M_t); }$/;"	function	line:152	class:std::__uniq_ptr_impl	access:public	signature:() const	returns:const _Dp 
_M_t	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      tuple<pointer, _Dp> _M_t;$/;"	member	line:155	class:std::__uniq_ptr_impl	access:private
unique_ptr	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^  template <typename _Tp, typename _Dp = default_delete<_Tp>>     class unique_ptr $/;"	class	line:160	namespace:std
_DeleterConstraint	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      template <class _Up>       using _DeleterConstraint = $/;"	member	line:163	class:std::unique_ptr	typeref:class:_DeleterConstraint	access:private
_M_t	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      __uniq_ptr_impl<_Tp, _Dp> _M_t;$/;"	member	line:166	class:std::unique_ptr	access:private
pointer	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      using pointer	  = typename __uniq_ptr_impl<_Tp, _Dp>::pointer;$/;"	member	line:169	class:std::unique_ptr	typeref:class:pointer	access:public
element_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      using element_type  = _Tp;$/;"	member	line:170	class:std::unique_ptr	typeref:class:element_type	access:public
deleter_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      using deleter_type  = _Dp;$/;"	member	line:171	class:std::unique_ptr	typeref:class:deleter_type	access:public
__safe_conversion_up	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      template<typename _Up, typename _Ep> 	using __safe_conversion_up = __and_< $/;"	member	line:176	class:std::unique_ptr	typeref:class:__safe_conversion_up	access:public
_M_t	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^	: _M_t()$/;"	function	line:192	class:std::unique_ptr	access:public	signature:()
_M_t	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^	: _M_t(__p)$/;"	function	line:205	class:std::unique_ptr	access:public	signature:(__p)
_M_t	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      : _M_t(__p, __d) { }$/;"	function	line:218	class:std::unique_ptr	access:public	signature:(__p, __d)
move	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      : _M_t(std::move(__p), std::move(__d))$/;"	prototype	line:229	class:std::unique_ptr	access:public	signature:(__p)	returns:_M_t 
move	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      : _M_t(std::move(__p), std::move(__d))$/;"	function	line:229	class:std::unique_ptr::std	access:public	signature:(__d)	returns:std :: 
unique_ptr	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^	constexpr unique_ptr(nullptr_t) noexcept : unique_ptr() { }$/;"	function	line:236	class:std::unique_ptr	access:public	signature:()
_M_t	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      : _M_t(__u.release(), std::forward<deleter_type>(__u.get_deleter())) { }$/;"	function	line:242	class:std::unique_ptr	access:public	signature:(__u.release(), std::forward<deleter_type>(__u.get_deleter()))
_M_t	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^	: _M_t(__u.release(), std::forward<_Ep>(__u.get_deleter()))$/;"	function	line:256	class:std::unique_ptr	access:public	signature:(__u.release(), std::forward<_Ep>(__u.get_deleter()))
noexcept	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^	unique_ptr(auto_ptr<_Up>&& __u) noexcept;$/;"	member	line:265	class:std::unique_ptr	access:public
operator *	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      operator*() const$/;"	function	line:326	class:std::unique_ptr	access:public	signature:() const	returns:typename add_lvalue_reference <element_type> :: type 
unique_ptr	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      unique_ptr(const unique_ptr&) = delete;$/;"	prototype	line:394	class:std::unique_ptr	access:public	signature:(const unique_ptr&)
operator =	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      unique_ptr& operator=(const unique_ptr&) = delete;$/;"	prototype	line:395	class:std::unique_ptr	access:public	signature:(const unique_ptr&)	returns:unique_ptr 
unique_ptr<_Tp[], _Dp>	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^  template<typename _Tp, typename _Dp>     class unique_ptr<_Tp[], _Dp> $/;"	class	line:403	namespace:std
_DeleterConstraint	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      template <typename _Up>       using _DeleterConstraint = $/;"	member	line:406	class:std::unique_ptr<_Tp[], _Dp>	typeref:class:_DeleterConstraint	access:private
_M_t	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      __uniq_ptr_impl<_Tp, _Dp> _M_t;$/;"	member	line:409	class:std::unique_ptr<_Tp[], _Dp>	access:private
__remove_cv	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      template<typename _Up> 	using __remove_cv = typename remove_cv<_Up>::type; $/;"	member	line:412	class:std::unique_ptr<_Tp[], _Dp>	typeref:class:__remove_cv	access:private
__is_derived_Tp	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      template<typename _Up> 	using __is_derived_Tp $/;"	member	line:416	class:std::unique_ptr<_Tp[], _Dp>	typeref:class:__is_derived_Tp	access:private
pointer	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      using pointer	  = typename __uniq_ptr_impl<_Tp, _Dp>::pointer;$/;"	member	line:421	class:std::unique_ptr<_Tp[], _Dp>	typeref:class:pointer	access:public
element_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      using element_type  = _Tp;$/;"	member	line:422	class:std::unique_ptr<_Tp[], _Dp>	typeref:class:element_type	access:public
deleter_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      using deleter_type  = _Dp;$/;"	member	line:423	class:std::unique_ptr<_Tp[], _Dp>	typeref:class:deleter_type	access:public
__safe_conversion_up	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      template<typename _Up, typename _Ep,                typename _Up_up = unique_ptr<_Up, _Ep>, 	       typename _Up_element_type = typename _Up_up::element_type> 	using __safe_conversion_up = __and_< $/;"	member	line:430	class:std::unique_ptr<_Tp[], _Dp>	typeref:class:__safe_conversion_up	access:public
__safe_conversion_raw	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      template<typename _Up>         using __safe_conversion_raw = __and_< $/;"	member	line:442	class:std::unique_ptr<_Tp[], _Dp>	typeref:class:__safe_conversion_raw	access:public
_M_t	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^	: _M_t()$/;"	function	line:460	class:std::unique_ptr<_Tp[], _Dp>	access:public	signature:()
_M_t	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^	: _M_t(__p)$/;"	function	line:477	class:std::unique_ptr<_Tp[], _Dp>	access:public	signature:(__p)
_M_t	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      : _M_t(__p, __d) { }$/;"	function	line:494	class:std::unique_ptr<_Tp[], _Dp>	access:public	signature:(__p, __d)
move	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      : _M_t(std::move(__p), std::move(__d))$/;"	prototype	line:509	class:std::unique_ptr<_Tp[], _Dp>	access:public	signature:(__p)	returns:_M_t 
move	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      : _M_t(std::move(__p), std::move(__d))$/;"	function	line:509	class:std::unique_ptr<_Tp[], _Dp>::std	access:public	signature:(__d)	returns:std :: 
_M_t	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      : _M_t(__u.release(), std::forward<deleter_type>(__u.get_deleter())) { }$/;"	function	line:515	class:std::unique_ptr<_Tp[], _Dp>	access:public	signature:(__u.release(), std::forward<deleter_type>(__u.get_deleter()))
unique_ptr	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^	constexpr unique_ptr(nullptr_t) noexcept : unique_ptr() { }$/;"	function	line:520	class:std::unique_ptr<_Tp[], _Dp>	access:public	signature:()
_M_t	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^	: _M_t(__u.release(), std::forward<_Ep>(__u.get_deleter()))$/;"	function	line:525	class:std::unique_ptr<_Tp[], _Dp>	access:public	signature:(__u.release(), std::forward<_Ep>(__u.get_deleter()))
~unique_ptr	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      ~unique_ptr()$/;"	function	line:529	class:std::unique_ptr<_Tp[], _Dp>	access:public	signature:()
operator []	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      operator[](size_t __i) const$/;"	function	line:585	class:std::unique_ptr<_Tp[], _Dp>	access:public	signature:(size_t __i) const	returns:typename std :: add_lvalue_reference <element_type> :: type 
unique_ptr	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      unique_ptr(const unique_ptr&) = delete;$/;"	prototype	line:663	class:std::unique_ptr<_Tp[], _Dp>	access:public	signature:(const unique_ptr&)
operator =	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^      unique_ptr& operator=(const unique_ptr&) = delete;$/;"	prototype	line:664	class:std::unique_ptr<_Tp[], _Dp>	access:public	signature:(const unique_ptr&)	returns:unique_ptr 
swap	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^  template<typename _Tp, typename _Dp>     typename enable_if<!__is_swappable<_Dp>::value>::type     swap(unique_ptr<_Tp, _Dp>&, $/;"	prototype	line:682	namespace:std	signature:(unique_ptr<_Tp, _Dp>&, unique_ptr<_Tp, _Dp>&)	returns:template typename enable_if <!__is_swappable<_Dp>::value> :: type 
operator ==	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^  template<typename _Tp, typename _Dp, 	   typename _Up, typename _Ep>     inline bool     operator==(const unique_ptr<_Tp, _Dp>& __x, $/;"	function	line:689	namespace:std	signature:(const unique_ptr<_Tp, _Dp>& __x, const unique_ptr<_Up, _Ep>& __y)	returns:template inline bool 
operator !=	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^  template<typename _Tp, typename _Dp, 	   typename _Up, typename _Ep>     inline bool     operator!=(const unique_ptr<_Tp, _Dp>& __x, $/;"	function	line:706	namespace:std	signature:(const unique_ptr<_Tp, _Dp>& __x, const unique_ptr<_Up, _Ep>& __y)	returns:template inline bool 
operator <	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^  template<typename _Tp, typename _Dp, 	   typename _Up, typename _Ep>     inline bool     operator<(const unique_ptr<_Tp, _Dp>& __x, $/;"	function	line:723	namespace:std	signature:(const unique_ptr<_Tp, _Dp>& __x, const unique_ptr<_Up, _Ep>& __y)	returns:template inline bool 
operator <	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^  template<typename _Tp, typename _Dp>     inline bool     operator<(const unique_ptr<_Tp, _Dp>& __x, nullptr_t) $/;"	function	line:734	namespace:std	signature:(const unique_ptr<_Tp, _Dp>& __x, nullptr_t)	returns:template inline bool 
operator <	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^  template<typename _Tp, typename _Dp>     inline bool     operator<(nullptr_t, const unique_ptr<_Tp, _Dp>& __x) $/;"	function	line:740	namespace:std	signature:(nullptr_t, const unique_ptr<_Tp, _Dp>& __x)	returns:template inline bool 
operator <=	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^  template<typename _Tp, typename _Dp, 	   typename _Up, typename _Ep>     inline bool     operator<=(const unique_ptr<_Tp, _Dp>& __x, $/;"	function	line:747	namespace:std	signature:(const unique_ptr<_Tp, _Dp>& __x, const unique_ptr<_Up, _Ep>& __y)	returns:template inline bool 
operator <=	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^  template<typename _Tp, typename _Dp>     inline bool     operator<=(const unique_ptr<_Tp, _Dp>& __x, nullptr_t) $/;"	function	line:753	namespace:std	signature:(const unique_ptr<_Tp, _Dp>& __x, nullptr_t)	returns:template inline bool 
operator <=	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^  template<typename _Tp, typename _Dp>     inline bool     operator<=(nullptr_t, const unique_ptr<_Tp, _Dp>& __x) $/;"	function	line:758	namespace:std	signature:(nullptr_t, const unique_ptr<_Tp, _Dp>& __x)	returns:template inline bool 
operator >	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^  template<typename _Tp, typename _Dp, 	   typename _Up, typename _Ep>     inline bool     operator>(const unique_ptr<_Tp, _Dp>& __x, $/;"	function	line:764	namespace:std	signature:(const unique_ptr<_Tp, _Dp>& __x, const unique_ptr<_Up, _Ep>& __y)	returns:template inline bool 
operator >	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^  template<typename _Tp, typename _Dp>     inline bool     operator>(const unique_ptr<_Tp, _Dp>& __x, nullptr_t) $/;"	function	line:770	namespace:std	signature:(const unique_ptr<_Tp, _Dp>& __x, nullptr_t)	returns:template inline bool 
operator >	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^  template<typename _Tp, typename _Dp>     inline bool     operator>(nullptr_t, const unique_ptr<_Tp, _Dp>& __x) $/;"	function	line:776	namespace:std	signature:(nullptr_t, const unique_ptr<_Tp, _Dp>& __x)	returns:template inline bool 
operator >=	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^  template<typename _Tp, typename _Dp, 	   typename _Up, typename _Ep>     inline bool     operator>=(const unique_ptr<_Tp, _Dp>& __x, $/;"	function	line:783	namespace:std	signature:(const unique_ptr<_Tp, _Dp>& __x, const unique_ptr<_Up, _Ep>& __y)	returns:template inline bool 
operator >=	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^  template<typename _Tp, typename _Dp>     inline bool     operator>=(const unique_ptr<_Tp, _Dp>& __x, nullptr_t) $/;"	function	line:789	namespace:std	signature:(const unique_ptr<_Tp, _Dp>& __x, nullptr_t)	returns:template inline bool 
operator >=	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^  template<typename _Tp, typename _Dp>     inline bool     operator>=(nullptr_t, const unique_ptr<_Tp, _Dp>& __x) $/;"	function	line:794	namespace:std	signature:(nullptr_t, const unique_ptr<_Tp, _Dp>& __x)	returns:template inline bool 
hash	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^  template<typename _Tp, typename _Dp>     struct hash<unique_ptr<_Tp, _Dp>> $/;"	struct	line:799	namespace:std	inherits:__hash_base<size_t,unique_ptr<_Tp,_Dp>>,__poison_hash<typenameunique_ptr<_Tp,_Dp>::pointer>
__cpp_lib_make_unique	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^#define __cpp_lib_make_unique 201304$/;"	macro	line:813
_MakeUniq	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^  template<typename _Tp>     struct _MakeUniq $/;"	struct	line:816	namespace:std
__single_object	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^    { typedef unique_ptr<_Tp> __single_object; }; $/;"	typedef	line:817	struct:std::_MakeUniq	access:public
_MakeUniq	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^  template<typename _Tp>     struct _MakeUniq<_Tp[]> $/;"	struct	line:820	namespace:std
__array	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^    { typedef unique_ptr<_Tp[]> __array; }; $/;"	typedef	line:821	struct:std::_MakeUniq	access:public
_MakeUniq	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^  template<typename _Tp, size_t _Bound>     struct _MakeUniq<_Tp[_Bound]> $/;"	struct	line:824	namespace:std
__invalid_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^    { struct __invalid_type { }; };$/;"	struct	line:825	struct:std::_MakeUniq	access:public
make_unique	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^  template<typename _Tp, typename... _Args>     inline typename _MakeUniq<_Tp>::__single_object     make_unique(_Args&&... __args) $/;"	function	line:830	namespace:std	signature:(_Args&&.... __args)	returns:template inline typename _MakeUniq <_Tp> :: __single_object 
make_unique	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^  template<typename _Tp>     inline typename _MakeUniq<_Tp>::__array     make_unique(size_t __num) $/;"	function	line:836	namespace:std	signature:(size_t __num)	returns:template inline typename _MakeUniq <_Tp> :: __array 
make_unique	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\unique_ptr.h	/^  template<typename _Tp, typename... _Args>     inline typename _MakeUniq<_Tp>::__invalid_type     make_unique(_Args&&...) = delete; $/;"	prototype	line:842	namespace:std	signature:(_Args&&....)	returns:template inline typename _MakeUniq <_Tp> :: __invalid_type 






_TIME_H_	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^#define _TIME_H_$/;"	macro	line:7
_SECIMP	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^#define _SECIMP$/;"	macro	line:17
_SECIMP	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^#define _SECIMP __declspec(dllimport)$/;"	macro	line:20
_CRTIMP	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^#define _CRTIMP __declspec(dllimport)$/;"	macro	line:31
_WCHAR_T_DEFINED	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^#define _WCHAR_T_DEFINED$/;"	macro	line:35
_TIME32_T_DEFINED	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^#define _TIME32_T_DEFINED$/;"	macro	line:40
__time32_t	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  typedef long __time32_t; $/;"	typedef	line:41
_TIME64_T_DEFINED	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^#define _TIME64_T_DEFINED$/;"	macro	line:45
__time64_t	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  __MINGW_EXTENSION typedef __int64 __time64_t; $/;"	typedef	line:46
_TIME_T_DEFINED	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^#define _TIME_T_DEFINED$/;"	macro	line:50
time_t	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  typedef __time32_t time_t; $/;"	typedef	line:52
time_t	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  typedef __time64_t time_t; $/;"	typedef	line:54
_CLOCK_T_DEFINED	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^#define _CLOCK_T_DEFINED$/;"	macro	line:59
clock_t	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  typedef long clock_t; $/;"	typedef	line:60
_SIZE_T_DEFINED	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^#define _SIZE_T_DEFINED$/;"	macro	line:64
size_t	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^#undef size_t$/;"	macro	line:65
size_t	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  __MINGW_EXTENSION typedef unsigned __int64 size_t; $/;"	typedef	line:67
size_t	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  typedef unsigned int size_t; $/;"	typedef	line:69
_SSIZE_T_DEFINED	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^#define _SSIZE_T_DEFINED$/;"	macro	line:74
ssize_t	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^#undef ssize_t$/;"	macro	line:75
ssize_t	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  __MINGW_EXTENSION typedef __int64 ssize_t; $/;"	typedef	line:77
ssize_t	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  typedef int ssize_t; $/;"	typedef	line:79
NULL	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^#define NULL 0$/;"	macro	line:86
NULL	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^#define NULL 0LL$/;"	macro	line:88
NULL	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^#define NULL ((void *)0)$/;"	macro	line:91
_TM_DEFINED	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^#define _TM_DEFINED$/;"	macro	line:96
tm	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  struct tm {$/;"	struct	line:97
tm_sec	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^    int tm_sec;$/;"	member	line:98	struct:tm	access:public
tm_min	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^    int tm_min;$/;"	member	line:99	struct:tm	access:public
tm_hour	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^    int tm_hour;$/;"	member	line:100	struct:tm	access:public
tm_mday	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^    int tm_mday;$/;"	member	line:101	struct:tm	access:public
tm_mon	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^    int tm_mon;$/;"	member	line:102	struct:tm	access:public
tm_year	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^    int tm_year;$/;"	member	line:103	struct:tm	access:public
tm_wday	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^    int tm_wday;$/;"	member	line:104	struct:tm	access:public
tm_yday	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^    int tm_yday;$/;"	member	line:105	struct:tm	access:public
tm_isdst	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^    int tm_isdst;$/;"	member	line:106	struct:tm	access:public
CLOCKS_PER_SEC	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^#define CLOCKS_PER_SEC 1000$/;"	macro	line:110
__daylight	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  _CRTIMP int *__cdecl __daylight(void);$/;"	prototype	line:113	signature:(void)	returns:_CRTIMP int __cdecl 
__dstbias	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  _CRTIMP long *__cdecl __dstbias(void);$/;"	prototype	line:114	signature:(void)	returns:_CRTIMP long __cdecl 
__timezone	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  _CRTIMP long *__cdecl __timezone(void);$/;"	prototype	line:115	signature:(void)	returns:_CRTIMP long __cdecl 
__tzname	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  _CRTIMP char **__cdecl __tzname(void);$/;"	prototype	line:116	signature:(void)	returns:_CRTIMP char __cdecl 
_daylight	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^#define _daylight (* __daylight())$/;"	macro	line:117
_dstbias	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^#define _dstbias (* __dstbias())$/;"	macro	line:118
_timezone	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^#define _timezone (* __timezone())$/;"	macro	line:119
_tzname	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^#define _tzname (__tzname())$/;"	macro	line:120
_daylight	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  __MINGW_IMPORT int _daylight;$/;"	variable	line:122
_dstbias	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  __MINGW_IMPORT long _dstbias;$/;"	variable	line:123
_timezone	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  __MINGW_IMPORT long _timezone;$/;"	variable	line:124
_tzname	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  __MINGW_IMPORT char * _tzname[2];$/;"	variable	line:125
_get_daylight	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  _CRTIMP errno_t __cdecl _get_daylight(int *_Daylight);$/;"	prototype	line:128	signature:(int *_Daylight)	returns:_CRTIMP errno_t __cdecl 
_get_dstbias	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  _CRTIMP errno_t __cdecl _get_dstbias(long *_Daylight_savings_bias);$/;"	prototype	line:129	signature:(long *_Daylight_savings_bias)	returns:_CRTIMP errno_t __cdecl 
_get_timezone	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  _CRTIMP errno_t __cdecl _get_timezone(long *_Timezone);$/;"	prototype	line:130	signature:(long *_Timezone)	returns:_CRTIMP errno_t __cdecl 
_get_tzname	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  _CRTIMP errno_t __cdecl _get_tzname(size_t *_ReturnValue,char *_Buffer,size_t _SizeInBytes,int _Index);$/;"	prototype	line:131	signature:(size_t *_ReturnValue,char *_Buffer,size_t _SizeInBytes,int _Index)	returns:_CRTIMP errno_t __cdecl 
asctime_s	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  _SECIMP errno_t __cdecl asctime_s (char *_Buf,size_t _SizeInWords,const struct tm *_Tm);$/;"	prototype	line:133	signature:(char *_Buf,size_t _SizeInWords,const struct tm *_Tm)	returns:_SECIMP errno_t __cdecl 
_ctime32_s	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  _SECIMP errno_t __cdecl _ctime32_s (char *_Buf,size_t _SizeInBytes,const __time32_t *_Time);$/;"	prototype	line:135	signature:(char *_Buf,size_t _SizeInBytes,const __time32_t *_Time)	returns:_SECIMP errno_t __cdecl 
clock	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  clock_t __cdecl clock(void);$/;"	prototype	line:136	signature:(void)	returns:clock_t __cdecl 
_difftime32	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  double __cdecl _difftime32(__time32_t _Time1,__time32_t _Time2);$/;"	prototype	line:137	signature:(__time32_t _Time1,__time32_t _Time2)	returns:double __cdecl 
_gmtime32_s	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  _SECIMP errno_t __cdecl _gmtime32_s (struct tm *_Tm,const __time32_t *_Time);$/;"	prototype	line:139	signature:(struct tm *_Tm,const __time32_t *_Time)	returns:_SECIMP errno_t __cdecl 
_localtime32_s	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  _SECIMP errno_t __cdecl _localtime32_s (struct tm *_Tm,const __time32_t *_Time);$/;"	prototype	line:141	signature:(struct tm *_Tm,const __time32_t *_Time)	returns:_SECIMP errno_t __cdecl 
strftime	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  size_t __cdecl strftime(char * __restrict__ _Buf,size_t _SizeInBytes,const char * __restrict__ _Format,const struct tm * __restrict__ _Tm);$/;"	prototype	line:142	signature:(char * __restrict__ _Buf,size_t _SizeInBytes,const char * __restrict__ _Format,const struct tm * __restrict__ _Tm)	returns:size_t __cdecl 
_strftime_l	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  _CRTIMP size_t __cdecl _strftime_l(char * __restrict__ _Buf,size_t _Max_size,const char * __restrict__ _Format,const struct tm * __restrict__ _Tm,_locale_t _Locale);$/;"	prototype	line:143	signature:(char * __restrict__ _Buf,size_t _Max_size,const char * __restrict__ _Format,const struct tm * __restrict__ _Tm,_locale_t _Locale)	returns:_CRTIMP size_t __cdecl 
_strdate_s	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  _SECIMP errno_t __cdecl _strdate_s (char *_Buf,size_t _SizeInBytes);$/;"	prototype	line:145	signature:(char *_Buf,size_t _SizeInBytes)	returns:_SECIMP errno_t __cdecl 
_strtime_s	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  _SECIMP errno_t __cdecl _strtime_s (char *_Buf ,size_t _SizeInBytes);$/;"	prototype	line:147	signature:(char *_Buf ,size_t _SizeInBytes)	returns:_SECIMP errno_t __cdecl 
_time32	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  __time32_t __cdecl _time32(__time32_t *_Time);$/;"	prototype	line:148	signature:(__time32_t *_Time)	returns:__time32_t __cdecl 
_mktime32	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  __time32_t __cdecl _mktime32(struct tm *_Tm);$/;"	prototype	line:149	signature:(struct tm *_Tm)	returns:__time32_t __cdecl 
_mkgmtime32	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  __time32_t __cdecl _mkgmtime32(struct tm *_Tm);$/;"	prototype	line:150	signature:(struct tm *_Tm)	returns:__time32_t __cdecl 
_tzset	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  void __cdecl _tzset(void);$/;"	prototype	line:159	signature:(void)	returns:_CRTIMP void __cdecl 
_difftime64	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  double __cdecl _difftime64(__time64_t _Time1,__time64_t _Time2);$/;"	prototype	line:162	signature:(__time64_t _Time1,__time64_t _Time2)	returns:double __cdecl 
_ctime64_s	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  _SECIMP errno_t __cdecl _ctime64_s (char *_Buf,size_t _SizeInBytes,const __time64_t *_Time);$/;"	prototype	line:164	signature:(char *_Buf,size_t _SizeInBytes,const __time64_t *_Time)	returns:_SECIMP errno_t __cdecl 
_gmtime64_s	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  _SECIMP errno_t __cdecl _gmtime64_s (struct tm *_Tm,const __time64_t *_Time);$/;"	prototype	line:166	signature:(struct tm *_Tm,const __time64_t *_Time)	returns:_SECIMP errno_t __cdecl 
_localtime64_s	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  _SECIMP errno_t __cdecl _localtime64_s (struct tm *_Tm,const __time64_t *_Time);$/;"	prototype	line:168	signature:(struct tm *_Tm,const __time64_t *_Time)	returns:_SECIMP errno_t __cdecl 
_mktime64	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  _CRTIMP __time64_t __cdecl _mktime64(struct tm *_Tm);$/;"	prototype	line:169	signature:(struct tm *_Tm)	returns:_CRTIMP __time64_t __cdecl 
_mkgmtime64	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  _CRTIMP __time64_t __cdecl _mkgmtime64(struct tm *_Tm);$/;"	prototype	line:170	signature:(struct tm *_Tm)	returns:_CRTIMP __time64_t __cdecl 
_time64	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  _CRTIMP __time64_t __cdecl _time64(__time64_t *_Time);$/;"	prototype	line:171	signature:(__time64_t *_Time)	returns:_CRTIMP __time64_t __cdecl 
_getsystime	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  unsigned __cdecl _getsystime(struct tm *_Tm);$/;"	prototype	line:172	signature:(struct tm *_Tm)	returns:unsigned __cdecl 
_setsystime	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  unsigned __cdecl _setsystime(struct tm *_Tm,unsigned _MilliSec);$/;"	prototype	line:173	signature:(struct tm *_Tm,unsigned _MilliSec)	returns:unsigned __cdecl 
_wasctime	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  _CRTIMP wchar_t *__cdecl _wasctime(const struct tm *_Tm);$/;"	prototype	line:176	signature:(const struct tm *_Tm)	returns:_CRTIMP wchar_t __cdecl 
_wasctime_s	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  _SECIMP errno_t __cdecl _wasctime_s (wchar_t *_Buf,size_t _SizeInWords,const struct tm *_Tm);$/;"	prototype	line:177	signature:(wchar_t *_Buf,size_t _SizeInWords,const struct tm *_Tm)	returns:_SECIMP errno_t __cdecl 
_wctime32_s	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  _SECIMP errno_t __cdecl _wctime32_s (wchar_t *_Buf,size_t _SizeInWords,const __time32_t *_Time);$/;"	prototype	line:179	signature:(wchar_t *_Buf,size_t _SizeInWords,const __time32_t *_Time)	returns:_SECIMP errno_t __cdecl 
wcsftime	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  size_t __cdecl wcsftime(wchar_t * __restrict__ _Buf,size_t _SizeInWords,const wchar_t * __restrict__ _Format,const struct tm * __restrict__ _Tm);$/;"	prototype	line:180	signature:(wchar_t * __restrict__ _Buf,size_t _SizeInWords,const wchar_t * __restrict__ _Format,const struct tm * __restrict__ _Tm)	returns:size_t __cdecl 
_wcsftime_l	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  _CRTIMP size_t __cdecl _wcsftime_l(wchar_t * __restrict__ _Buf,size_t _SizeInWords,const wchar_t * __restrict__ _Format,const struct tm * __restrict__ _Tm,_locale_t _Locale);$/;"	prototype	line:181	signature:(wchar_t * __restrict__ _Buf,size_t _SizeInWords,const wchar_t * __restrict__ _Format,const struct tm * __restrict__ _Tm,_locale_t _Locale)	returns:_CRTIMP size_t __cdecl 
_wstrdate_s	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  _SECIMP errno_t __cdecl _wstrdate_s (wchar_t *_Buf,size_t _SizeInWords);$/;"	prototype	line:183	signature:(wchar_t *_Buf,size_t _SizeInWords)	returns:_SECIMP errno_t __cdecl 
_wstrtime_s	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  _SECIMP errno_t __cdecl _wstrtime_s (wchar_t *_Buf,size_t _SizeInWords);$/;"	prototype	line:185	signature:(wchar_t *_Buf,size_t _SizeInWords)	returns:_SECIMP errno_t __cdecl 
_wctime64_s	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  _SECIMP errno_t __cdecl _wctime64_s (wchar_t *_Buf,size_t _SizeInWords,const __time64_t *_Time);$/;"	prototype	line:187	signature:(wchar_t *_Buf,size_t _SizeInWords,const __time64_t *_Time)	returns:_SECIMP errno_t __cdecl 
_INC_WTIME_INL	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^#define _INC_WTIME_INL$/;"	macro	line:190
_wctime	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  __CRT_INLINE wchar_t *__cdecl _wctime(const time_t *_Time) { return _wctime64(_Time); }$/;"	function	line:194	signature:(const time_t *_Time)	returns:__CRT_INLINE wchar_t __cdecl 
_wctime	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  __CRT_INLINE wchar_t *__cdecl _wctime(const time_t *_Time) { return _wctime32(_Time); }$/;"	function	line:196	signature:(const time_t *_Time)	returns:__CRT_INLINE wchar_t __cdecl 
_INC_WTIME_S_INL	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^#define _INC_WTIME_S_INL$/;"	macro	line:202
_wctime_s	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  errno_t __cdecl _wctime_s(wchar_t *, size_t, const time_t *);$/;"	prototype	line:203	signature:(wchar_t *, size_t, const time_t *)	returns:errno_t __cdecl 
_wctime_s	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  __CRT_INLINE errno_t __cdecl _wctime_s (wchar_t *_Buffer,size_t _SizeInWords,const time_t *_Time) { return _wctime64_s (_Buffer,_SizeInWords,_Time); }$/;"	function	line:206	signature:(wchar_t *_Buffer,size_t _SizeInWords,const time_t *_Time)	returns:__CRT_INLINE errno_t __cdecl 
_wctime_s	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  __CRT_INLINE errno_t __cdecl _wctime_s (wchar_t *_Buffer,size_t _SizeInWords,const time_t *_Time) { return _wctime32_s (_Buffer,_SizeInWords,_Time); }$/;"	function	line:208	signature:(wchar_t *_Buffer,size_t _SizeInWords,const time_t *_Time)	returns:__CRT_INLINE errno_t __cdecl 
_WTIME_DEFINED	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^#define _WTIME_DEFINED$/;"	macro	line:213
difftime	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^double __cdecl difftime(time_t _Time1,time_t _Time2);$/;"	prototype	line:218	signature:(time_t _Time1,time_t _Time2)	returns:double __cdecl 
mktime	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^time_t __cdecl mktime(struct tm *_Tm);$/;"	prototype	line:223	signature:(struct tm *_Tm)	returns:time_t __cdecl 
_mkgmtime	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^time_t __cdecl _mkgmtime(struct tm *_Tm);$/;"	prototype	line:224	signature:(struct tm *_Tm)	returns:time_t __cdecl 
time	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^time_t __cdecl time(time_t *_Time);$/;"	prototype	line:225	signature:(time_t *_Time)	returns:time_t __cdecl 
__TIME_INLINE	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^#define __TIME_INLINE __mingw_static_ovr$/;"	macro	line:230
__TIME_INLINE	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^#define __TIME_INLINE __CRT_INLINE$/;"	macro	line:232
difftime	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^__TIME_INLINE double __cdecl difftime(time_t _Time1,time_t _Time2)$/;"	function	line:235	signature:(time_t _Time1,time_t _Time2)	returns:__TIME_INLINE double __cdecl 
ctime	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^__TIME_INLINE char *__cdecl ctime(const time_t *_Time) { return _ctime64(_Time); }$/;"	function	line:237	signature:(const time_t *_Time)	returns:__TIME_INLINE char __cdecl 
gmtime	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^__TIME_INLINE struct tm *__cdecl gmtime(const time_t *_Time) { return _gmtime64(_Time); }$/;"	function	line:238	signature:(const time_t *_Time)	returns:__TIME_INLINE struct tm __cdecl 
localtime	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^__TIME_INLINE struct tm *__cdecl localtime(const time_t *_Time) { return _localtime64(_Time); }$/;"	function	line:239	signature:(const time_t *_Time)	returns:__TIME_INLINE struct tm __cdecl 
mktime	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^__TIME_INLINE time_t __cdecl mktime(struct tm *_Tm) { return _mktime64(_Tm); }$/;"	function	line:240	signature:(struct tm *_Tm)	returns:__TIME_INLINE time_t __cdecl 
_mkgmtime	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^__TIME_INLINE time_t __cdecl _mkgmtime(struct tm *_Tm) { return _mkgmtime64(_Tm); }$/;"	function	line:241	signature:(struct tm *_Tm)	returns:__TIME_INLINE time_t __cdecl 
time	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^__TIME_INLINE time_t __cdecl time(time_t *_Time) { return _time64(_Time); }$/;"	function	line:242	signature:(time_t *_Time)	returns:__TIME_INLINE time_t __cdecl 
difftime	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^__TIME_INLINE double __cdecl difftime(time_t _Time1,time_t _Time2)$/;"	function	line:244	signature:(time_t _Time1,time_t _Time2)	returns:__TIME_INLINE double __cdecl 
ctime	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^__TIME_INLINE char *__cdecl ctime(const time_t *_Time) { return _ctime32(_Time); }$/;"	function	line:246	signature:(const time_t *_Time)	returns:__TIME_INLINE char __cdecl 
localtime	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^__TIME_INLINE struct tm *__cdecl localtime(const time_t *_Time) { return _localtime32(_Time); }$/;"	function	line:247	signature:(const time_t *_Time)	returns:__TIME_INLINE struct tm __cdecl 
mktime	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^__TIME_INLINE time_t __cdecl mktime(struct tm *_Tm) { return _mktime32(_Tm); }$/;"	function	line:248	signature:(struct tm *_Tm)	returns:__TIME_INLINE time_t __cdecl 
gmtime	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^__TIME_INLINE struct tm *__cdecl gmtime(const time_t *_Time) { return _gmtime32(_Time); }$/;"	function	line:249	signature:(const time_t *_Time)	returns:__TIME_INLINE struct tm __cdecl 
_mkgmtime	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^__TIME_INLINE time_t __cdecl _mkgmtime(struct tm *_Tm) { return _mkgmtime32(_Tm); }$/;"	function	line:250	signature:(struct tm *_Tm)	returns:__TIME_INLINE time_t __cdecl 
time	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^__TIME_INLINE time_t __cdecl time(time_t *_Time) { return _time32(_Time); }$/;"	function	line:251	signature:(time_t *_Time)	returns:__TIME_INLINE time_t __cdecl 
localtime_s	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^__forceinline errno_t __cdecl localtime_s(struct tm *_Tm,const time_t *_Time) { return _localtime32_s(_Tm,_Time); }$/;"	function	line:256	signature:(struct tm *_Tm,const time_t *_Time)	returns:__forceinline errno_t __cdecl 
gmtime_s	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^__forceinline errno_t __cdecl gmtime_s(struct tm *_Tm, const time_t *_Time)   { return _gmtime32_s(_Tm, _Time); }$/;"	function	line:257	signature:(struct tm *_Tm, const time_t *_Time)	returns:__forceinline errno_t __cdecl 
ctime_s	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^__forceinline errno_t __cdecl ctime_s(char *_Buf,size_t _SizeInBytes,const time_t *_Time) { return _ctime32_s(_Buf,_SizeInBytes,_Time); }$/;"	function	line:258	signature:(char *_Buf,size_t _SizeInBytes,const time_t *_Time)	returns:__forceinline errno_t __cdecl 
localtime_s	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^__forceinline errno_t __cdecl localtime_s(struct tm *_Tm,const time_t *_Time) { return _localtime64_s(_Tm,_Time); }$/;"	function	line:261	signature:(struct tm *_Tm,const time_t *_Time)	returns:__forceinline errno_t __cdecl 
gmtime_s	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^__forceinline errno_t __cdecl gmtime_s(struct tm *_Tm, const time_t *_Time) { return _gmtime64_s(_Tm, _Time); }$/;"	function	line:262	signature:(struct tm *_Tm, const time_t *_Time)	returns:__forceinline errno_t __cdecl 
ctime_s	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^__forceinline errno_t __cdecl ctime_s(char *_Buf,size_t _SizeInBytes,const time_t *_Time) { return _ctime64_s(_Buf,_SizeInBytes,_Time); }$/;"	function	line:263	signature:(char *_Buf,size_t _SizeInBytes,const time_t *_Time)	returns:__forceinline errno_t __cdecl 
CLK_TCK	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^#define CLK_TCK CLOCKS_PER_SEC$/;"	macro	line:268
__MINGW_ATTRIB_DEPRECATED_UCRT	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^#define __MINGW_ATTRIB_DEPRECATED_UCRT \\$/;"	macro	line:271
daylight	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^#define daylight (_daylight)$/;"	macro	line:275
__MINGW_ATTRIB_DEPRECATED_UCRT	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^#define __MINGW_ATTRIB_DEPRECATED_UCRT$/;"	macro	line:277
_TIMEZONE_DEFINED	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^#define _TIMEZONE_DEFINED$/;"	macro	line:289
timezone	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^struct timezone {$/;"	struct	line:290
tz_minuteswest	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  int tz_minuteswest;$/;"	member	line:291	struct:timezone	access:public
tz_dsttime	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  int tz_dsttime;$/;"	member	line:292	struct:timezone	access:public
mingw_gettimeofday	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^  extern int __cdecl mingw_gettimeofday (struct timeval *p, struct timezone *z);$/;"	prototype	line:295	signature:(struct timeval *p, struct timezone *z)	returns:int __cdecl 
_POSIX_THREAD_SAFE_FUNCTIONS	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^#define _POSIX_THREAD_SAFE_FUNCTIONS 200112L$/;"	macro	line:305
localtime_r	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^__forceinline struct tm *__cdecl localtime_r(const time_t *_Time, struct tm *_Tm) {$/;"	function	line:309	signature:(const time_t *_Time, struct tm *_Tm)	returns:__forceinline struct tm __cdecl 
gmtime_r	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^__forceinline struct tm *__cdecl gmtime_r(const time_t *_Time, struct tm *_Tm) {$/;"	function	line:312	signature:(const time_t *_Time, struct tm *_Tm)	returns:__forceinline struct tm __cdecl 
ctime_r	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^__forceinline char *__cdecl ctime_r(const time_t *_Time, char *_Str) {$/;"	function	line:315	signature:(const time_t *_Time, char *_Str)	returns:__forceinline char __cdecl 
asctime_r	C:\MinGW\mingw64\x86_64-w64-mingw32\include\time.h	/^__forceinline char *__cdecl asctime_r(const struct tm *_Tm, char * _Str) {$/;"	function	line:318	signature:(const struct tm *_Tm, char * _Str)	returns:__forceinline char __cdecl 

_TIMEVAL_DEFINED	C:\MinGW\mingw64\x86_64-w64-mingw32\include\_timeval.h	/^#define _TIMEVAL_DEFINED$/;"	macro	line:8
timeval	C:\MinGW\mingw64\x86_64-w64-mingw32\include\_timeval.h	/^struct timeval$/;"	struct	line:10
tv_sec	C:\MinGW\mingw64\x86_64-w64-mingw32\include\_timeval.h	/^	long tv_sec;$/;"	member	line:12	struct:timeval	access:public
tv_usec	C:\MinGW\mingw64\x86_64-w64-mingw32\include\_timeval.h	/^	long tv_usec;$/;"	member	line:13	struct:timeval	access:public
timerisset	C:\MinGW\mingw64\x86_64-w64-mingw32\include\_timeval.h	/^#define timerisset(tvp)		((tvp)->tv_sec || (tvp)->tv_usec)$/;"	macro	line:16
timercmp	C:\MinGW\mingw64\x86_64-w64-mingw32\include\_timeval.h	/^#define timercmp(tvp,uvp,cmp)					\\$/;"	macro	line:17
timerclear	C:\MinGW\mingw64\x86_64-w64-mingw32\include\_timeval.h	/^#define timerclear(tvp)		(tvp)->tv_sec = (tvp)->tv_usec = 0$/;"	macro	line:20

_USES_ALLOCATOR_H	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\uses_allocator.h	/^#define _USES_ALLOCATOR_H 1$/;"	macro	line:26
std	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\uses_allocator.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	namespace	line:35
__erased_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\uses_allocator.h	/^  struct __erased_type { };$/;"	struct	line:39	namespace:std
__is_erased_or_convertible	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\uses_allocator.h	/^  template<typename _Alloc, typename _Tp>     using __is_erased_or_convertible $/;"	member	line:42	namespace:std	typeref:class:__is_erased_or_convertible
allocator_arg_t	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\uses_allocator.h	/^  struct allocator_arg_t { explicit allocator_arg_t() = default; };$/;"	struct	line:46	namespace:std
allocator_arg_t	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\uses_allocator.h	/^  struct allocator_arg_t { explicit allocator_arg_t() = default; };$/;"	prototype	line:46	struct:std::allocator_arg_t	access:public	signature:()	returns:explicit 
allocator_arg	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\uses_allocator.h	/^  _GLIBCXX17_INLINE constexpr allocator_arg_t allocator_arg =$/;"	member	line:48	namespace:std
__uses_allocator_helper	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\uses_allocator.h	/^  template<typename _Tp, typename _Alloc, typename = __void_t<>>     struct __uses_allocator_helper $/;"	struct	line:52	namespace:std	inherits:false_type
__uses_allocator_helper	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\uses_allocator.h	/^  template<typename _Tp, typename _Alloc>     struct __uses_allocator_helper<_Tp, _Alloc, $/;"	struct	line:56	namespace:std	inherits:__is_erased_or_convertible<_Alloc,typename_Tp::allocator_type>::type
uses_allocator	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\uses_allocator.h	/^  template<typename _Tp, typename _Alloc>     struct uses_allocator $/;"	struct	line:63	namespace:std	inherits:__uses_allocator_helper<_Tp,_Alloc>::type
__uses_alloc_base	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\uses_allocator.h	/^  struct __uses_alloc_base { };$/;"	struct	line:67	namespace:std
__uses_alloc0	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\uses_allocator.h	/^  struct __uses_alloc0 : __uses_alloc_base$/;"	struct	line:69	namespace:std	inherits:__uses_alloc_base
_Sink	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\uses_allocator.h	/^    struct _Sink { void operator=(const void*) { } } _M_a;$/;"	struct	line:71	struct:std::__uses_alloc0	access:public
operator =	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\uses_allocator.h	/^    struct _Sink { void operator=(const void*) { } } _M_a;$/;"	function	line:71	struct:std::__uses_alloc0::_Sink	access:public	signature:(const void*)	returns:void 
_M_a	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\uses_allocator.h	/^    struct _Sink { void operator=(const void*) { } } _M_a;$/;"	member	line:71	struct:std::__uses_alloc0	typeref:struct:std::__uses_alloc0::_Sink	access:public
__uses_alloc1	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\uses_allocator.h	/^  template<typename _Alloc>     struct __uses_alloc1 : __uses_alloc_base { const _Alloc* _M_a; }; $/;"	struct	line:75	namespace:std	inherits:__uses_alloc_base
_M_a	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\uses_allocator.h	/^    struct __uses_alloc1 : __uses_alloc_base { const _Alloc* _M_a; };$/;"	member	line:75	struct:std::__uses_alloc1	access:public
__uses_alloc2	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\uses_allocator.h	/^  template<typename _Alloc>     struct __uses_alloc2 : __uses_alloc_base { const _Alloc* _M_a; }; $/;"	struct	line:78	namespace:std	inherits:__uses_alloc_base
_M_a	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\uses_allocator.h	/^    struct __uses_alloc2 : __uses_alloc_base { const _Alloc* _M_a; };$/;"	member	line:78	struct:std::__uses_alloc2	access:public
__uses_alloc	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\uses_allocator.h	/^  template<typename _Tp, typename _Alloc, typename... _Args>     struct __uses_alloc<true, _Tp, _Alloc, _Args...> $/;"	struct	line:84	namespace:std	inherits:conditional<is_constructible<_Tp,allocator_arg_t,_Alloc,_Args...>::value,__uses_alloc1<_Alloc>,__uses_alloc2<_Alloc>>::type
static_assert	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\uses_allocator.h	/^      static_assert(__or_<$/;"	prototype	line:90	struct:std::__uses_alloc	access:public	signature:(__or_< is_constructible<_Tp, allocator_arg_t, _Alloc, _Args...>, is_constructible<_Tp, _Args..., _Alloc>>::value, "construction with" " an allocator must be possible if uses_allocator is true")
__uses_alloc	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\uses_allocator.h	/^  template<typename _Tp, typename _Alloc, typename... _Args>     struct __uses_alloc<false, _Tp, _Alloc, _Args...> $/;"	struct	line:97	namespace:std	inherits:__uses_alloc0
__uses_alloc_t	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\uses_allocator.h	/^  template<typename _Tp, typename _Alloc, typename... _Args>     using __uses_alloc_t = $/;"	member	line:101	namespace:std	typeref:class:__uses_alloc_t
__use_alloc	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\uses_allocator.h	/^  template<typename _Tp, typename _Alloc, typename... _Args>     inline __uses_alloc_t<_Tp, _Alloc, _Args...>     __use_alloc(const _Alloc& __a) $/;"	function	line:106	namespace:std	signature:(const _Alloc& __a)	returns:template inline __uses_alloc_t <_Tp, _Alloc, _Args...> 
__use_alloc	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\uses_allocator.h	/^  template<typename _Tp, typename _Alloc, typename... _Args>     void     __use_alloc(const _Alloc&&) = delete; $/;"	prototype	line:115	namespace:std	signature:(const _Alloc&&)	returns:template void 
uses_allocator_v	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\uses_allocator.h	/^  template <typename _Tp, typename _Alloc>     inline constexpr bool uses_allocator_v = $/;"	member	line:119	namespace:std
__is_uses_allocator_predicate	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\uses_allocator.h	/^  template<template<typename...> class _Predicate, 	   typename _Tp, typename _Alloc, typename... _Args>     struct __is_uses_allocator_predicate $/;"	struct	line:125	namespace:std	inherits:conditional<uses_allocator<_Tp,_Alloc>::value,__or_<_Predicate<_Tp,allocator_arg_t,_Alloc,_Args...>,_Predicate<_Tp,_Args...,_Alloc>>,_Predicate<_Tp,_Args...>>::type
__is_uses_allocator_constructible	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\uses_allocator.h	/^  template<typename _Tp, typename _Alloc, typename... _Args>     struct __is_uses_allocator_constructible $/;"	struct	line:132	namespace:std	inherits:__is_uses_allocator_predicate<is_constructible,_Tp,_Alloc,_Args...>
__is_uses_allocator_constructible_v	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\uses_allocator.h	/^  template<typename _Tp, typename _Alloc, typename... _Args>     _GLIBCXX17_INLINE constexpr bool __is_uses_allocator_constructible_v = $/;"	member	line:138	namespace:std
__is_nothrow_uses_allocator_constructible	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\uses_allocator.h	/^  template<typename _Tp, typename _Alloc, typename... _Args>     struct __is_nothrow_uses_allocator_constructible $/;"	struct	line:143	namespace:std	inherits:__is_uses_allocator_predicate<is_nothrow_constructible,_Tp,_Alloc,_Args...>
__is_nothrow_uses_allocator_constructible_v	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\uses_allocator.h	/^  template<typename _Tp, typename _Alloc, typename... _Args>     _GLIBCXX17_INLINE constexpr bool     __is_nothrow_uses_allocator_constructible_v = $/;"	member	line:152	namespace:std
__uses_allocator_construct_impl	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\uses_allocator.h	/^  template<typename _Tp, typename... _Args>     void __uses_allocator_construct_impl(__uses_alloc0 __a, _Tp* __ptr, $/;"	function	line:157	namespace:std	signature:(__uses_alloc0 __a, _Tp* __ptr, _Args&&... __args)	returns:template void 
__uses_allocator_construct_impl	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\uses_allocator.h	/^  template<typename _Tp, typename _Alloc, typename... _Args>     void __uses_allocator_construct_impl(__uses_alloc1<_Alloc> __a, _Tp* __ptr, $/;"	function	line:162	namespace:std	signature:(__uses_alloc1<_Alloc> __a, _Tp* __ptr, _Args&&... __args)	returns:template void 
__uses_allocator_construct_impl	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\uses_allocator.h	/^  template<typename _Tp, typename _Alloc, typename... _Args>     void __uses_allocator_construct_impl(__uses_alloc2<_Alloc> __a, _Tp* __ptr, $/;"	function	line:170	namespace:std	signature:(__uses_alloc2<_Alloc> __a, _Tp* __ptr, _Args&&... __args)	returns:template void 
__uses_allocator_construct	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\uses_allocator.h	/^  template<typename _Tp, typename _Alloc, typename... _Args>     void __uses_allocator_construct(const _Alloc& __a, _Tp* __ptr, $/;"	function	line:175	namespace:std	signature:(const _Alloc& __a, _Tp* __ptr, _Args&&... __args)	returns:template void 
_CODECVT_H	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^#define _CODECVT_H 1$/;"	macro	line:37
std	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	namespace	line:41
codecvt_base	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^  class codecvt_base$/;"	class	line:46	namespace:std
result	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^    enum result$/;"	enum	line:49	class:std::codecvt_base	access:public
ok	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      ok,$/;"	enumerator	line:51	enum:std::codecvt_base::result
partial	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      partial,$/;"	enumerator	line:52	enum:std::codecvt_base::result
error	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      error,$/;"	enumerator	line:53	enum:std::codecvt_base::result
noconv	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      noconv$/;"	enumerator	line:54	enum:std::codecvt_base::result
__codecvt_abstract_base	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^  template<typename _InternT, typename _ExternT, typename _StateT>     class __codecvt_abstract_base $/;"	class	line:68	namespace:std	inherits:locale::facet,codecvt_base
result	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      typedef codecvt_base::result	result; $/;"	typedef	line:73	class:std::__codecvt_abstract_base	access:public
intern_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      typedef _InternT			intern_type; $/;"	typedef	line:74	class:std::__codecvt_abstract_base	access:public
extern_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      typedef _ExternT			extern_type; $/;"	typedef	line:75	class:std::__codecvt_abstract_base	access:public
state_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      typedef _StateT			state_type; $/;"	typedef	line:76	class:std::__codecvt_abstract_base	access:public
out	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      out(state_type& __state, const intern_type* __from,$/;"	function	line:116	class:std::__codecvt_abstract_base	access:public	signature:(state_type& __state, const intern_type* __from, const intern_type* __from_end, const intern_type*& __from_next, extern_type* __to, extern_type* __to_end, extern_type*& __to_next) const	returns:result 
unshift	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      unshift(state_type& __state, extern_type* __to, extern_type* __to_end,$/;"	function	line:155	class:std::__codecvt_abstract_base	access:public	signature:(state_type& __state, extern_type* __to, extern_type* __to_end, extern_type*& __to_next) const	returns:result 
in	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      in(state_type& __state, const extern_type* __from,$/;"	function	line:196	class:std::__codecvt_abstract_base	access:public	signature:(state_type& __state, const extern_type* __from, const extern_type* __from_end, const extern_type*& __from_next, intern_type* __to, intern_type* __to_end, intern_type*& __to_next) const	returns:result 
encoding	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      encoding() const throw()$/;"	function	line:206	class:std::__codecvt_abstract_base	access:public	signature:() const	returns:int 
always_noconv	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      always_noconv() const throw()$/;"	function	line:210	class:std::__codecvt_abstract_base	access:public	signature:() const	returns:bool 
length	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      length(state_type& __state, const extern_type* __from,$/;"	function	line:214	class:std::__codecvt_abstract_base	access:public	signature:(state_type& __state, const extern_type* __from, const extern_type* __end, size_t __max) const	returns:int 
max_length	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      max_length() const throw()$/;"	function	line:219	class:std::__codecvt_abstract_base	access:public	signature:() const	returns:int 
__codecvt_abstract_base	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      __codecvt_abstract_base(size_t __refs = 0) : locale::facet(__refs) { }$/;"	function	line:224	class:std::__codecvt_abstract_base	access:protected	signature:(size_t __refs = 0)	returns:explicit 
~__codecvt_abstract_base	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      ~__codecvt_abstract_base() { }$/;"	function	line:227	class:std::__codecvt_abstract_base	access:protected	implementation:virtual	signature:()	returns:virtual 
do_out	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      do_out(state_type& __state, const intern_type* __from,$/;"	prototype	line:237	class:std::__codecvt_abstract_base	access:protected	implementation:pure virtual	signature:(state_type& __state, const intern_type* __from, const intern_type* __from_end, const intern_type*& __from_next, extern_type* __to, extern_type* __to_end, extern_type*& __to_next) const	returns:virtual result 
do_unshift	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      do_unshift(state_type& __state, extern_type* __to,$/;"	prototype	line:243	class:std::__codecvt_abstract_base	access:protected	implementation:pure virtual	signature:(state_type& __state, extern_type* __to, extern_type* __to_end, extern_type*& __to_next) const	returns:virtual result 
do_in	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      do_in(state_type& __state, const extern_type* __from,$/;"	prototype	line:247	class:std::__codecvt_abstract_base	access:protected	implementation:pure virtual	signature:(state_type& __state, const extern_type* __from, const extern_type* __from_end, const extern_type*& __from_next, intern_type* __to, intern_type* __to_end, intern_type*& __to_next) const	returns:virtual result 
do_encoding	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      do_encoding() const throw() = 0;$/;"	prototype	line:253	class:std::__codecvt_abstract_base	access:protected	implementation:pure virtual	signature:() const	returns:virtual int 
do_always_noconv	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      do_always_noconv() const throw() = 0;$/;"	prototype	line:256	class:std::__codecvt_abstract_base	access:protected	implementation:pure virtual	signature:() const	returns:virtual bool 
do_length	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      do_length(state_type&, const extern_type* __from,$/;"	prototype	line:259	class:std::__codecvt_abstract_base	access:protected	implementation:pure virtual	signature:(state_type&, const extern_type* __from, const extern_type* __end, size_t __max) const	returns:virtual int 
do_max_length	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      do_max_length() const throw() = 0;$/;"	prototype	line:263	class:std::__codecvt_abstract_base	access:protected	implementation:pure virtual	signature:() const	returns:virtual int 
codecvt	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^   template<typename _InternT, typename _ExternT, typename _StateT>     class codecvt $/;"	class	line:274	namespace:std	inherits:__codecvt_abstract_base<_InternT,_ExternT,_StateT>
result	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      typedef codecvt_base::result	result; $/;"	typedef	line:279	class:std::codecvt	access:public
intern_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      typedef _InternT			intern_type; $/;"	typedef	line:280	class:std::codecvt	access:public
extern_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      typedef _ExternT			extern_type; $/;"	typedef	line:281	class:std::codecvt	access:public
state_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      typedef _StateT			state_type; $/;"	typedef	line:282	class:std::codecvt	access:public
_M_c_locale_codecvt	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      __c_locale			_M_c_locale_codecvt;$/;"	member	line:285	class:std::codecvt	access:protected
id	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      static locale::id			id;$/;"	member	line:288	class:std::codecvt	access:public
codecvt	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      codecvt(size_t __refs = 0)$/;"	function	line:291	class:std::codecvt	access:public	signature:(size_t __refs = 0)	returns:explicit 
codecvt	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      codecvt(__c_locale __cloc, size_t __refs = 0);$/;"	prototype	line:297	class:std::codecvt	access:public	signature:(__c_locale __cloc, size_t __refs = 0)	returns:explicit 
~codecvt	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      ~codecvt() { }$/;"	function	line:301	class:std::codecvt	access:protected	implementation:virtual	signature:()	returns:virtual 
do_out	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      do_out(state_type& __state, const intern_type* __from,$/;"	prototype	line:304	class:std::codecvt	access:protected	implementation:virtual	signature:(state_type& __state, const intern_type* __from, const intern_type* __from_end, const intern_type*& __from_next, extern_type* __to, extern_type* __to_end, extern_type*& __to_next) const	returns:virtual result 
do_unshift	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      do_unshift(state_type& __state, extern_type* __to,$/;"	prototype	line:310	class:std::codecvt	access:protected	implementation:virtual	signature:(state_type& __state, extern_type* __to, extern_type* __to_end, extern_type*& __to_next) const	returns:virtual result 
do_in	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      do_in(state_type& __state, const extern_type* __from,$/;"	prototype	line:314	class:std::codecvt	access:protected	implementation:virtual	signature:(state_type& __state, const extern_type* __from, const extern_type* __from_end, const extern_type*& __from_next, intern_type* __to, intern_type* __to_end, intern_type*& __to_next) const	returns:virtual result 
do_encoding	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      do_encoding() const throw();$/;"	prototype	line:320	class:std::codecvt	access:protected	implementation:virtual	signature:() const	returns:virtual int 
do_always_noconv	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      do_always_noconv() const throw();$/;"	prototype	line:323	class:std::codecvt	access:protected	implementation:virtual	signature:() const	returns:virtual bool 
do_length	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      do_length(state_type&, const extern_type* __from,$/;"	prototype	line:326	class:std::codecvt	access:protected	implementation:virtual	signature:(state_type&, const extern_type* __from, const extern_type* __end, size_t __max) const	returns:virtual int 
do_max_length	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      do_max_length() const throw();$/;"	prototype	line:330	class:std::codecvt	access:protected	implementation:virtual	signature:() const	returns:virtual int 
id	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^  template<typename _InternT, typename _ExternT, typename _StateT>     locale::id codecvt<_InternT, _ExternT, _StateT>::id; $/;"	member	line:334	class:std::codecvt
codecvt<char, char, mbstate_t>	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^  template<>     class codecvt<char, char, mbstate_t> $/;"	class	line:338	namespace:std	inherits:__codecvt_abstract_base<char,char,mbstate_t>
intern_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      typedef char			intern_type; $/;"	typedef	line:345	class:std::codecvt<char, char, mbstate_t>	access:public
extern_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      typedef char			extern_type; $/;"	typedef	line:346	class:std::codecvt<char, char, mbstate_t>	access:public
state_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      typedef mbstate_t			state_type; $/;"	typedef	line:347	class:std::codecvt<char, char, mbstate_t>	access:public
_M_c_locale_codecvt	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      __c_locale			_M_c_locale_codecvt;$/;"	member	line:350	class:std::codecvt<char, char, mbstate_t>	access:protected
id	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      static locale::id id;$/;"	member	line:353	class:std::codecvt<char, char, mbstate_t>	access:public
codecvt	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      codecvt(size_t __refs = 0);$/;"	prototype	line:356	class:std::codecvt<char, char, mbstate_t>	access:public	signature:(size_t __refs = 0)	returns:explicit 
codecvt	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      codecvt(__c_locale __cloc, size_t __refs = 0);$/;"	prototype	line:359	class:std::codecvt<char, char, mbstate_t>	access:public	signature:(__c_locale __cloc, size_t __refs = 0)	returns:explicit 
~codecvt	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      ~codecvt();$/;"	prototype	line:363	class:std::codecvt<char, char, mbstate_t>	access:protected	implementation:virtual	signature:()	returns:virtual 
do_out	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      do_out(state_type& __state, const intern_type* __from,$/;"	prototype	line:366	class:std::codecvt<char, char, mbstate_t>	access:protected	implementation:virtual	signature:(state_type& __state, const intern_type* __from, const intern_type* __from_end, const intern_type*& __from_next, extern_type* __to, extern_type* __to_end, extern_type*& __to_next) const	returns:virtual result 
do_unshift	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      do_unshift(state_type& __state, extern_type* __to,$/;"	prototype	line:372	class:std::codecvt<char, char, mbstate_t>	access:protected	implementation:virtual	signature:(state_type& __state, extern_type* __to, extern_type* __to_end, extern_type*& __to_next) const	returns:virtual result 
do_in	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      do_in(state_type& __state, const extern_type* __from,$/;"	prototype	line:376	class:std::codecvt<char, char, mbstate_t>	access:protected	implementation:virtual	signature:(state_type& __state, const extern_type* __from, const extern_type* __from_end, const extern_type*& __from_next, intern_type* __to, intern_type* __to_end, intern_type*& __to_next) const	returns:virtual result 
do_encoding	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      do_encoding() const throw();$/;"	prototype	line:382	class:std::codecvt<char, char, mbstate_t>	access:protected	implementation:virtual	signature:() const	returns:virtual int 
do_always_noconv	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      do_always_noconv() const throw();$/;"	prototype	line:385	class:std::codecvt<char, char, mbstate_t>	access:protected	implementation:virtual	signature:() const	returns:virtual bool 
do_length	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      do_length(state_type&, const extern_type* __from,$/;"	prototype	line:388	class:std::codecvt<char, char, mbstate_t>	access:protected	implementation:virtual	signature:(state_type&, const extern_type* __from, const extern_type* __end, size_t __max) const	returns:virtual int 
do_max_length	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      do_max_length() const throw();$/;"	prototype	line:392	class:std::codecvt<char, char, mbstate_t>	access:protected	implementation:virtual	signature:() const	returns:virtual int 
codecvt<wchar_t, char, mbstate_t>	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^  template<>     class codecvt<wchar_t, char, mbstate_t> $/;"	class	line:401	namespace:std	inherits:__codecvt_abstract_base<wchar_t,char,mbstate_t>
intern_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      typedef wchar_t			intern_type; $/;"	typedef	line:408	class:std::codecvt<wchar_t, char, mbstate_t>	access:public
extern_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      typedef char			extern_type; $/;"	typedef	line:409	class:std::codecvt<wchar_t, char, mbstate_t>	access:public
state_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      typedef mbstate_t			state_type; $/;"	typedef	line:410	class:std::codecvt<wchar_t, char, mbstate_t>	access:public
_M_c_locale_codecvt	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      __c_locale			_M_c_locale_codecvt;$/;"	member	line:413	class:std::codecvt<wchar_t, char, mbstate_t>	access:protected
id	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      static locale::id			id;$/;"	member	line:416	class:std::codecvt<wchar_t, char, mbstate_t>	access:public
codecvt	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      codecvt(size_t __refs = 0);$/;"	prototype	line:419	class:std::codecvt<wchar_t, char, mbstate_t>	access:public	signature:(size_t __refs = 0)	returns:explicit 
codecvt	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      codecvt(__c_locale __cloc, size_t __refs = 0);$/;"	prototype	line:422	class:std::codecvt<wchar_t, char, mbstate_t>	access:public	signature:(__c_locale __cloc, size_t __refs = 0)	returns:explicit 
~codecvt	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      ~codecvt();$/;"	prototype	line:426	class:std::codecvt<wchar_t, char, mbstate_t>	access:protected	implementation:virtual	signature:()	returns:virtual 
do_out	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      do_out(state_type& __state, const intern_type* __from,$/;"	prototype	line:429	class:std::codecvt<wchar_t, char, mbstate_t>	access:protected	implementation:virtual	signature:(state_type& __state, const intern_type* __from, const intern_type* __from_end, const intern_type*& __from_next, extern_type* __to, extern_type* __to_end, extern_type*& __to_next) const	returns:virtual result 
do_unshift	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      do_unshift(state_type& __state,$/;"	prototype	line:435	class:std::codecvt<wchar_t, char, mbstate_t>	access:protected	implementation:virtual	signature:(state_type& __state, extern_type* __to, extern_type* __to_end, extern_type*& __to_next) const	returns:virtual result 
do_in	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      do_in(state_type& __state,$/;"	prototype	line:440	class:std::codecvt<wchar_t, char, mbstate_t>	access:protected	implementation:virtual	signature:(state_type& __state, const extern_type* __from, const extern_type* __from_end, const extern_type*& __from_next, intern_type* __to, intern_type* __to_end, intern_type*& __to_next) const	returns:virtual result 
do_encoding	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      int do_encoding() const throw();$/;"	prototype	line:447	class:std::codecvt<wchar_t, char, mbstate_t>	access:protected	implementation:virtual	signature:() const	returns:virtual int 
do_always_noconv	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      bool do_always_noconv() const throw();$/;"	prototype	line:450	class:std::codecvt<wchar_t, char, mbstate_t>	access:protected	implementation:virtual	signature:() const	returns:virtual bool 
do_length	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      int do_length(state_type&, const extern_type* __from,$/;"	prototype	line:453	class:std::codecvt<wchar_t, char, mbstate_t>	access:protected	implementation:virtual	signature:(state_type&, const extern_type* __from, const extern_type* __end, size_t __max) const	returns:virtual int 
do_max_length	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      do_max_length() const throw();$/;"	prototype	line:457	class:std::codecvt<wchar_t, char, mbstate_t>	access:protected	implementation:virtual	signature:() const	returns:virtual int 
codecvt<char16_t, char, mbstate_t>	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^  template<>     class codecvt<char16_t, char, mbstate_t> $/;"	class	line:468	namespace:std	inherits:__codecvt_abstract_base<char16_t,char,mbstate_t>
intern_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      typedef char16_t			intern_type; $/;"	typedef	line:473	class:std::codecvt<char16_t, char, mbstate_t>	access:public
extern_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      typedef char			extern_type; $/;"	typedef	line:474	class:std::codecvt<char16_t, char, mbstate_t>	access:public
state_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      typedef mbstate_t			state_type; $/;"	typedef	line:475	class:std::codecvt<char16_t, char, mbstate_t>	access:public
id	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      static locale::id			id;$/;"	member	line:478	class:std::codecvt<char16_t, char, mbstate_t>	access:public
codecvt	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      codecvt(size_t __refs = 0)$/;"	function	line:481	class:std::codecvt<char16_t, char, mbstate_t>	access:public	signature:(size_t __refs = 0)	returns:explicit 
~codecvt	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      ~codecvt();$/;"	prototype	line:486	class:std::codecvt<char16_t, char, mbstate_t>	access:protected	implementation:virtual	signature:()	returns:virtual 
do_out	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      do_out(state_type& __state, const intern_type* __from,$/;"	prototype	line:489	class:std::codecvt<char16_t, char, mbstate_t>	access:protected	implementation:virtual	signature:(state_type& __state, const intern_type* __from, const intern_type* __from_end, const intern_type*& __from_next, extern_type* __to, extern_type* __to_end, extern_type*& __to_next) const	returns:virtual result 
do_unshift	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      do_unshift(state_type& __state,$/;"	prototype	line:495	class:std::codecvt<char16_t, char, mbstate_t>	access:protected	implementation:virtual	signature:(state_type& __state, extern_type* __to, extern_type* __to_end, extern_type*& __to_next) const	returns:virtual result 
do_in	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      do_in(state_type& __state,$/;"	prototype	line:500	class:std::codecvt<char16_t, char, mbstate_t>	access:protected	implementation:virtual	signature:(state_type& __state, const extern_type* __from, const extern_type* __from_end, const extern_type*& __from_next, intern_type* __to, intern_type* __to_end, intern_type*& __to_next) const	returns:virtual result 
do_encoding	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      int do_encoding() const throw();$/;"	prototype	line:507	class:std::codecvt<char16_t, char, mbstate_t>	access:protected	implementation:virtual	signature:() const	returns:virtual int 
do_always_noconv	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      bool do_always_noconv() const throw();$/;"	prototype	line:510	class:std::codecvt<char16_t, char, mbstate_t>	access:protected	implementation:virtual	signature:() const	returns:virtual bool 
do_length	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      int do_length(state_type&, const extern_type* __from,$/;"	prototype	line:513	class:std::codecvt<char16_t, char, mbstate_t>	access:protected	implementation:virtual	signature:(state_type&, const extern_type* __from, const extern_type* __end, size_t __max) const	returns:virtual int 
do_max_length	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      do_max_length() const throw();$/;"	prototype	line:517	class:std::codecvt<char16_t, char, mbstate_t>	access:protected	implementation:virtual	signature:() const	returns:virtual int 
codecvt<char32_t, char, mbstate_t>	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^  template<>     class codecvt<char32_t, char, mbstate_t> $/;"	class	line:525	namespace:std	inherits:__codecvt_abstract_base<char32_t,char,mbstate_t>
intern_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      typedef char32_t			intern_type; $/;"	typedef	line:530	class:std::codecvt<char32_t, char, mbstate_t>	access:public
extern_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      typedef char			extern_type; $/;"	typedef	line:531	class:std::codecvt<char32_t, char, mbstate_t>	access:public
state_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      typedef mbstate_t			state_type; $/;"	typedef	line:532	class:std::codecvt<char32_t, char, mbstate_t>	access:public
id	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      static locale::id			id;$/;"	member	line:535	class:std::codecvt<char32_t, char, mbstate_t>	access:public
codecvt	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      codecvt(size_t __refs = 0)$/;"	function	line:538	class:std::codecvt<char32_t, char, mbstate_t>	access:public	signature:(size_t __refs = 0)	returns:explicit 
~codecvt	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      ~codecvt();$/;"	prototype	line:543	class:std::codecvt<char32_t, char, mbstate_t>	access:protected	implementation:virtual	signature:()	returns:virtual 
do_out	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      do_out(state_type& __state, const intern_type* __from,$/;"	prototype	line:546	class:std::codecvt<char32_t, char, mbstate_t>	access:protected	implementation:virtual	signature:(state_type& __state, const intern_type* __from, const intern_type* __from_end, const intern_type*& __from_next, extern_type* __to, extern_type* __to_end, extern_type*& __to_next) const	returns:virtual result 
do_unshift	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      do_unshift(state_type& __state,$/;"	prototype	line:552	class:std::codecvt<char32_t, char, mbstate_t>	access:protected	implementation:virtual	signature:(state_type& __state, extern_type* __to, extern_type* __to_end, extern_type*& __to_next) const	returns:virtual result 
do_in	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      do_in(state_type& __state,$/;"	prototype	line:557	class:std::codecvt<char32_t, char, mbstate_t>	access:protected	implementation:virtual	signature:(state_type& __state, const extern_type* __from, const extern_type* __from_end, const extern_type*& __from_next, intern_type* __to, intern_type* __to_end, intern_type*& __to_next) const	returns:virtual result 
do_encoding	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      int do_encoding() const throw();$/;"	prototype	line:564	class:std::codecvt<char32_t, char, mbstate_t>	access:protected	implementation:virtual	signature:() const	returns:virtual int 
do_always_noconv	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      bool do_always_noconv() const throw();$/;"	prototype	line:567	class:std::codecvt<char32_t, char, mbstate_t>	access:protected	implementation:virtual	signature:() const	returns:virtual bool 
do_length	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      int do_length(state_type&, const extern_type* __from,$/;"	prototype	line:570	class:std::codecvt<char32_t, char, mbstate_t>	access:protected	implementation:virtual	signature:(state_type&, const extern_type* __from, const extern_type* __end, size_t __max) const	returns:virtual int 
do_max_length	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      do_max_length() const throw();$/;"	prototype	line:574	class:std::codecvt<char32_t, char, mbstate_t>	access:protected	implementation:virtual	signature:() const	returns:virtual int 
codecvt_byname	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^  template<typename _InternT, typename _ExternT, typename _StateT>     class codecvt_byname : public codecvt<_InternT, _ExternT, _StateT> $/;"	class	line:582	namespace:std	inherits:codecvt<_InternT,_ExternT,_StateT>
codecvt_byname	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      codecvt_byname(const char* __s, size_t __refs = 0)$/;"	function	line:586	class:std::codecvt_byname	access:public	signature:(const char* __s, size_t __refs = 0)	returns:explicit 
codecvt_byname	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      codecvt_byname(const string& __s, size_t __refs = 0)$/;"	function	line:599	class:std::codecvt_byname	access:public	signature:(const string& __s, size_t __refs = 0)	returns:explicit 
~codecvt_byname	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      ~codecvt_byname() { }$/;"	function	line:605	class:std::codecvt_byname	access:protected	implementation:virtual	signature:()	returns:virtual 
codecvt_byname<char16_t, char, mbstate_t>	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^  template<>     class codecvt_byname<char16_t, char, mbstate_t> $/;"	class	line:610	namespace:std	inherits:codecvt<char16_t,char,mbstate_t>
codecvt_byname	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      codecvt_byname(const char*, size_t __refs = 0)$/;"	function	line:615	class:std::codecvt_byname<char16_t, char, mbstate_t>	access:public	signature:(const char*, size_t __refs = 0)	returns:explicit 
codecvt_byname	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      codecvt_byname(const string& __s, size_t __refs = 0)$/;"	function	line:619	class:std::codecvt_byname<char16_t, char, mbstate_t>	access:public	signature:(const string& __s, size_t __refs = 0)	returns:explicit 
~codecvt_byname	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      ~codecvt_byname() { }$/;"	function	line:624	class:std::codecvt_byname<char16_t, char, mbstate_t>	access:protected	implementation:virtual	signature:()	returns:virtual 
codecvt_byname<char32_t, char, mbstate_t>	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^  template<>     class codecvt_byname<char32_t, char, mbstate_t> $/;"	class	line:628	namespace:std	inherits:codecvt<char32_t,char,mbstate_t>
codecvt_byname	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      codecvt_byname(const char*, size_t __refs = 0)$/;"	function	line:633	class:std::codecvt_byname<char32_t, char, mbstate_t>	access:public	signature:(const char*, size_t __refs = 0)	returns:explicit 
codecvt_byname	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      codecvt_byname(const string& __s, size_t __refs = 0)$/;"	function	line:637	class:std::codecvt_byname<char32_t, char, mbstate_t>	access:public	signature:(const string& __s, size_t __refs = 0)	returns:explicit 
~codecvt_byname	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^      ~codecvt_byname() { }$/;"	function	line:642	class:std::codecvt_byname<char32_t, char, mbstate_t>	access:protected	implementation:virtual	signature:()	returns:virtual 
use_facet	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^  extern template     const codecvt<char, char, mbstate_t>&     use_facet<codecvt<char, char, mbstate_t> >(const locale&); $/;"	prototype	line:653	namespace:std	signature:(const locale&)	returns:template const codecvt <char, char, mbstate_t> 
has_facet	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^  extern template     bool     has_facet<codecvt<char, char, mbstate_t> >(const locale&); $/;"	prototype	line:657	namespace:std	signature:(const locale&)	returns:template bool 
use_facet	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^  extern template     const codecvt<wchar_t, char, mbstate_t>&     use_facet<codecvt<wchar_t, char, mbstate_t> >(const locale&); $/;"	prototype	line:664	namespace:std	signature:(const locale&)	returns:template const codecvt <wchar_t, char, mbstate_t> 
has_facet	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\codecvt.h	/^  extern template     bool     has_facet<codecvt<wchar_t, char, mbstate_t> >(const locale&); $/;"	prototype	line:668	namespace:std	signature:(const locale&)	returns:template bool 


_GLIBCXX_INVOKE_H	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\invoke.h	/^#define _GLIBCXX_INVOKE_H 1$/;"	macro	line:31
std	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\invoke.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	namespace	line:41
__invoke_impl	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\invoke.h	/^  template<typename _Res, typename _Fn, typename... _Args>     constexpr _Res     __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args) $/;"	function	line:59	namespace:std	signature:(__invoke_other, _Fn&& __f, _Args&&... __args)	returns:template constexpr _Res 
__invoke_impl	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\invoke.h	/^  template<typename _Res, typename _MemFun, typename _Tp, typename... _Args>     constexpr _Res     __invoke_impl(__invoke_memfun_ref, _MemFun&& __f, _Tp&& __t, $/;"	function	line:64	namespace:std	signature:(__invoke_memfun_ref, _MemFun&& __f, _Tp&& __t, _Args&&... __args)	returns:template constexpr _Res 
__invoke_impl	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\invoke.h	/^  template<typename _Res, typename _MemFun, typename _Tp, typename... _Args>     constexpr _Res     __invoke_impl(__invoke_memfun_deref, _MemFun&& __f, _Tp&& __t, $/;"	function	line:70	namespace:std	signature:(__invoke_memfun_deref, _MemFun&& __f, _Tp&& __t, _Args&&... __args)	returns:template constexpr _Res 
__invoke_impl	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\invoke.h	/^  template<typename _Res, typename _MemPtr, typename _Tp>     constexpr _Res     __invoke_impl(__invoke_memobj_ref, _MemPtr&& __f, _Tp&& __t) $/;"	function	line:78	namespace:std	signature:(__invoke_memobj_ref, _MemPtr&& __f, _Tp&& __t)	returns:template constexpr _Res 
__invoke_impl	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\invoke.h	/^  template<typename _Res, typename _MemPtr, typename _Tp>     constexpr _Res     __invoke_impl(__invoke_memobj_deref, _MemPtr&& __f, _Tp&& __t) $/;"	function	line:83	namespace:std	signature:(__invoke_memobj_deref, _MemPtr&& __f, _Tp&& __t)	returns:template constexpr _Res 
noexcept	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\invoke.h	/^    noexcept(__is_nothrow_invocable<_Callable, _Args...>::value)$/;"	function	line:90	namespace:std	signature:(__is_nothrow_invocable<_Callable, _Args...>::value)


_GLIBCXX_QUOTED_STRING_H	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\quoted_string.h	/^#define _GLIBCXX_QUOTED_STRING_H 1$/;"	macro	line:31
std	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\quoted_string.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	namespace	line:40
__detail	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\quoted_string.h	/^  namespace __detail {$/;"	namespace	line:44	namespace:std
_Quoted_string	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\quoted_string.h	/^    template<typename _String, typename _CharT>       struct _Quoted_string $/;"	struct	line:49	namespace:std::__detail
_Quoted_string	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\quoted_string.h	/^	_Quoted_string(_String __str, _CharT __del, _CharT __esc)$/;"	function	line:55	struct:std::__detail::_Quoted_string	access:public	signature:(_String __str, _CharT __del, _CharT __esc)
operator =	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\quoted_string.h	/^	operator=(_Quoted_string&) = delete;$/;"	prototype	line:60	struct:std::__detail::_Quoted_string	access:public	signature:(_Quoted_string&)	returns:_Quoted_string 
_M_string	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\quoted_string.h	/^	_String _M_string;$/;"	member	line:62	struct:std::__detail::_Quoted_string	access:public
_M_delim	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\quoted_string.h	/^	_CharT _M_delim;$/;"	member	line:63	struct:std::__detail::_Quoted_string	access:public
_M_escape	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\quoted_string.h	/^	_CharT _M_escape;$/;"	member	line:64	struct:std::__detail::_Quoted_string	access:public
operator <<	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\quoted_string.h	/^    template<typename _CharT, typename _Traits>       std::basic_ostream<_CharT, _Traits>&       operator<<(std::basic_ostream<_CharT, _Traits>& __os, $/;"	function	line:75	namespace:std::__detail	signature:(std::basic_ostream<_CharT, _Traits>& __os, const _Quoted_string<const _CharT*, _CharT>& __str)	returns:template std :: basic_ostream <_CharT, _Traits> 
operator <<	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\quoted_string.h	/^    template<typename _CharT, typename _Traits, typename _String>       std::basic_ostream<_CharT, _Traits>&       operator<<(std::basic_ostream<_CharT, _Traits>& __os, $/;"	function	line:99	namespace:std::__detail	signature:(std::basic_ostream<_CharT, _Traits>& __os, const _Quoted_string<_String, _CharT>& __str)	returns:template std :: basic_ostream <_CharT, _Traits> 
operator >>	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\quoted_string.h	/^    template<typename _CharT, typename _Traits, typename _Alloc>       std::basic_istream<_CharT, _Traits>&       operator>>(std::basic_istream<_CharT, _Traits>& __is, $/;"	function	line:121	namespace:std::__detail	signature:(std::basic_istream<_CharT, _Traits>& __is, const _Quoted_string<basic_string<_CharT, _Traits, _Alloc>&, _CharT>& __str)	returns:template std :: basic_istream <_CharT, _Traits> 


_LOCALE_FACETS_NONIO_H	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^#define _LOCALE_FACETS_NONIO_H 1$/;"	macro	line:35
std	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	namespace	line:41
time_base	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  class time_base$/;"	class	line:52	namespace:std
dateorder	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^    enum dateorder { no_order, dmy, mdy, ymd, ydm };$/;"	enum	line:55	class:std::time_base	access:public
no_order	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^    enum dateorder { no_order, dmy, mdy, ymd, ydm };$/;"	enumerator	line:55	enum:std::time_base::dateorder
dmy	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^    enum dateorder { no_order, dmy, mdy, ymd, ydm };$/;"	enumerator	line:55	enum:std::time_base::dateorder
mdy	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^    enum dateorder { no_order, dmy, mdy, ymd, ydm };$/;"	enumerator	line:55	enum:std::time_base::dateorder
ymd	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^    enum dateorder { no_order, dmy, mdy, ymd, ydm };$/;"	enumerator	line:55	enum:std::time_base::dateorder
ydm	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^    enum dateorder { no_order, dmy, mdy, ymd, ydm };$/;"	enumerator	line:55	enum:std::time_base::dateorder
__timepunct_cache	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  template<typename _CharT>     struct __timepunct_cache : public locale::facet $/;"	struct	line:59	namespace:std	inherits:locale::facet
_S_timezones	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      static const _CharT*		_S_timezones[14];$/;"	member	line:62	struct:std::__timepunct_cache	access:public
_M_date_format	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_date_format;$/;"	member	line:64	struct:std::__timepunct_cache	access:public
_M_date_era_format	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_date_era_format;$/;"	member	line:65	struct:std::__timepunct_cache	access:public
_M_time_format	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_time_format;$/;"	member	line:66	struct:std::__timepunct_cache	access:public
_M_time_era_format	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_time_era_format;$/;"	member	line:67	struct:std::__timepunct_cache	access:public
_M_date_time_format	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_date_time_format;$/;"	member	line:68	struct:std::__timepunct_cache	access:public
_M_date_time_era_format	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_date_time_era_format;$/;"	member	line:69	struct:std::__timepunct_cache	access:public
_M_am	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_am;$/;"	member	line:70	struct:std::__timepunct_cache	access:public
_M_pm	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_pm;$/;"	member	line:71	struct:std::__timepunct_cache	access:public
_M_am_pm_format	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_am_pm_format;$/;"	member	line:72	struct:std::__timepunct_cache	access:public
_M_day1	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_day1;$/;"	member	line:75	struct:std::__timepunct_cache	access:public
_M_day2	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_day2;$/;"	member	line:76	struct:std::__timepunct_cache	access:public
_M_day3	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_day3;$/;"	member	line:77	struct:std::__timepunct_cache	access:public
_M_day4	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_day4;$/;"	member	line:78	struct:std::__timepunct_cache	access:public
_M_day5	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_day5;$/;"	member	line:79	struct:std::__timepunct_cache	access:public
_M_day6	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_day6;$/;"	member	line:80	struct:std::__timepunct_cache	access:public
_M_day7	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_day7;$/;"	member	line:81	struct:std::__timepunct_cache	access:public
_M_aday1	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_aday1;$/;"	member	line:84	struct:std::__timepunct_cache	access:public
_M_aday2	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_aday2;$/;"	member	line:85	struct:std::__timepunct_cache	access:public
_M_aday3	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_aday3;$/;"	member	line:86	struct:std::__timepunct_cache	access:public
_M_aday4	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_aday4;$/;"	member	line:87	struct:std::__timepunct_cache	access:public
_M_aday5	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_aday5;$/;"	member	line:88	struct:std::__timepunct_cache	access:public
_M_aday6	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_aday6;$/;"	member	line:89	struct:std::__timepunct_cache	access:public
_M_aday7	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_aday7;$/;"	member	line:90	struct:std::__timepunct_cache	access:public
_M_month01	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_month01;$/;"	member	line:93	struct:std::__timepunct_cache	access:public
_M_month02	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_month02;$/;"	member	line:94	struct:std::__timepunct_cache	access:public
_M_month03	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_month03;$/;"	member	line:95	struct:std::__timepunct_cache	access:public
_M_month04	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_month04;$/;"	member	line:96	struct:std::__timepunct_cache	access:public
_M_month05	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_month05;$/;"	member	line:97	struct:std::__timepunct_cache	access:public
_M_month06	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_month06;$/;"	member	line:98	struct:std::__timepunct_cache	access:public
_M_month07	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_month07;$/;"	member	line:99	struct:std::__timepunct_cache	access:public
_M_month08	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_month08;$/;"	member	line:100	struct:std::__timepunct_cache	access:public
_M_month09	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_month09;$/;"	member	line:101	struct:std::__timepunct_cache	access:public
_M_month10	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_month10;$/;"	member	line:102	struct:std::__timepunct_cache	access:public
_M_month11	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_month11;$/;"	member	line:103	struct:std::__timepunct_cache	access:public
_M_month12	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_month12;$/;"	member	line:104	struct:std::__timepunct_cache	access:public
_M_amonth01	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_amonth01;$/;"	member	line:107	struct:std::__timepunct_cache	access:public
_M_amonth02	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_amonth02;$/;"	member	line:108	struct:std::__timepunct_cache	access:public
_M_amonth03	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_amonth03;$/;"	member	line:109	struct:std::__timepunct_cache	access:public
_M_amonth04	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_amonth04;$/;"	member	line:110	struct:std::__timepunct_cache	access:public
_M_amonth05	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_amonth05;$/;"	member	line:111	struct:std::__timepunct_cache	access:public
_M_amonth06	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_amonth06;$/;"	member	line:112	struct:std::__timepunct_cache	access:public
_M_amonth07	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_amonth07;$/;"	member	line:113	struct:std::__timepunct_cache	access:public
_M_amonth08	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_amonth08;$/;"	member	line:114	struct:std::__timepunct_cache	access:public
_M_amonth09	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_amonth09;$/;"	member	line:115	struct:std::__timepunct_cache	access:public
_M_amonth10	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_amonth10;$/;"	member	line:116	struct:std::__timepunct_cache	access:public
_M_amonth11	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_amonth11;$/;"	member	line:117	struct:std::__timepunct_cache	access:public
_M_amonth12	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_amonth12;$/;"	member	line:118	struct:std::__timepunct_cache	access:public
_M_allocated	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      bool				_M_allocated;$/;"	member	line:120	struct:std::__timepunct_cache	access:public
__timepunct_cache	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      __timepunct_cache(size_t __refs = 0) : facet(__refs),$/;"	function	line:122	struct:std::__timepunct_cache	access:public	signature:(size_t __refs = 0)
~__timepunct_cache	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      ~__timepunct_cache();$/;"	prototype	line:139	struct:std::__timepunct_cache	access:public	signature:()
operator =	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      operator=(const __timepunct_cache&);$/;"	prototype	line:143	struct:std::__timepunct_cache	access:private	signature:(const __timepunct_cache&)	returns:__timepunct_cache 
__timepunct_cache	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      __timepunct_cache(const __timepunct_cache&);$/;"	prototype	line:146	struct:std::__timepunct_cache	access:private	signature:(const __timepunct_cache&)	returns:explicit 
~__timepunct_cache	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  template<typename _CharT>     __timepunct_cache<_CharT>::~__timepunct_cache() $/;"	function	line:150	class:std::__timepunct_cache	signature:()	returns:template __timepunct_cache <_CharT> :: 
_S_timezones	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  template<>     const char*     __timepunct_cache<char>::_S_timezones[14]; $/;"	member	line:161	class:std::__timepunct_cache
_S_timezones	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  template<>     const wchar_t*     __timepunct_cache<wchar_t>::_S_timezones[14]; $/;"	member	line:166	class:std::__timepunct_cache
_S_timezones	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  template<typename _CharT>     const _CharT* __timepunct_cache<_CharT>::_S_timezones[14]; $/;"	member	line:171	class:std::__timepunct_cache
__timepunct	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  template<typename _CharT>     class __timepunct : public locale::facet $/;"	class	line:174	namespace:std	inherits:locale::facet
__char_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      typedef _CharT			__char_type; $/;"	typedef	line:178	class:std::__timepunct	access:public
__cache_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      typedef __timepunct_cache<_CharT>	__cache_type; $/;"	typedef	line:179	class:std::__timepunct	access:public
_M_data	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      __cache_type*			_M_data;$/;"	member	line:182	class:std::__timepunct	access:protected
_M_c_locale_timepunct	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      __c_locale			_M_c_locale_timepunct;$/;"	member	line:183	class:std::__timepunct	access:protected
_M_name_timepunct	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const char*			_M_name_timepunct;$/;"	member	line:184	class:std::__timepunct	access:protected
id	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      static locale::id			id;$/;"	member	line:188	class:std::__timepunct	access:public
__timepunct	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      __timepunct(size_t __refs = 0);$/;"	prototype	line:191	class:std::__timepunct	access:public	signature:(size_t __refs = 0)	returns:explicit 
__timepunct	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      __timepunct(__cache_type* __cache, size_t __refs = 0);$/;"	prototype	line:194	class:std::__timepunct	access:public	signature:(__cache_type* __cache, size_t __refs = 0)	returns:explicit 
__timepunct	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      __timepunct(__c_locale __cloc, const char* __s, size_t __refs = 0);$/;"	prototype	line:207	class:std::__timepunct	access:public	signature:(__c_locale __cloc, const char* __s, size_t __refs = 0)	returns:explicit 
_M_put	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      _M_put(_CharT* __s, size_t __maxlen, const _CharT* __format,$/;"	prototype	line:212	class:std::__timepunct	access:public	signature:(_CharT* __s, size_t __maxlen, const _CharT* __format, const tm* __tm) const	returns:void 
_M_date_formats	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      _M_date_formats(const _CharT** __date) const$/;"	function	line:216	class:std::__timepunct	access:public	signature:(const _CharT** __date) const	returns:void 
_M_time_formats	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      _M_time_formats(const _CharT** __time) const$/;"	function	line:224	class:std::__timepunct	access:public	signature:(const _CharT** __time) const	returns:void 
_M_date_time_formats	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      _M_date_time_formats(const _CharT** __dt) const$/;"	function	line:232	class:std::__timepunct	access:public	signature:(const _CharT** __dt) const	returns:void 
_M_am_pm_format	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      _M_am_pm_format(const _CharT*) const$/;"	function	line:241	class:std::__timepunct	access:public	signature:(const _CharT*) const	returns:void 
_M_am_pm	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      _M_am_pm(const _CharT** __ampm) const$/;"	function	line:246	class:std::__timepunct	access:public	signature:(const _CharT** __ampm) const	returns:void 
_M_days	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      _M_days(const _CharT** __days) const$/;"	function	line:253	class:std::__timepunct	access:public	signature:(const _CharT** __days) const	returns:void 
_M_days_abbreviated	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      _M_days_abbreviated(const _CharT** __days) const$/;"	function	line:265	class:std::__timepunct	access:public	signature:(const _CharT** __days) const	returns:void 
_M_months	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      _M_months(const _CharT** __months) const$/;"	function	line:277	class:std::__timepunct	access:public	signature:(const _CharT** __months) const	returns:void 
_M_months_abbreviated	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      _M_months_abbreviated(const _CharT** __months) const$/;"	function	line:294	class:std::__timepunct	access:public	signature:(const _CharT** __months) const	returns:void 
~__timepunct	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      ~__timepunct();$/;"	prototype	line:312	class:std::__timepunct	access:protected	implementation:virtual	signature:()	returns:virtual 
_M_initialize_timepunct	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      _M_initialize_timepunct(__c_locale __cloc = 0);$/;"	prototype	line:316	class:std::__timepunct	access:protected	signature:(__c_locale __cloc = 0)	returns:void 
id	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  template<typename _CharT>     locale::id __timepunct<_CharT>::id; $/;"	member	line:320	class:std::__timepunct
_M_initialize_timepunct	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  template<>     void     __timepunct<char>::_M_initialize_timepunct(__c_locale __cloc); $/;"	prototype	line:325	class:std::__timepunct	signature:(__c_locale __cloc)	returns:template void __timepunct <char> :: 
_M_put	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  template<>     void     __timepunct<char>::_M_put(char*, size_t, const char*, const tm*) const throw (); $/;"	prototype	line:329	class:std::__timepunct	signature:(char*, size_t, const char*, const tm*) const	returns:template void __timepunct <char> :: 
_M_initialize_timepunct	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  template<>     void     __timepunct<wchar_t>::_M_initialize_timepunct(__c_locale __cloc); $/;"	prototype	line:334	class:std::__timepunct	signature:(__c_locale __cloc)	returns:template void __timepunct <wchar_t> :: 
_M_put	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  template<>     void     __timepunct<wchar_t>::_M_put(wchar_t*, size_t, const wchar_t*, $/;"	prototype	line:338	class:std::__timepunct	signature:(wchar_t*, size_t, const wchar_t*, const tm*) const	returns:template void __timepunct <wchar_t> :: 
std	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	namespace	line:348
time_get	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^    class time_get : public locale::facet, public time_base$/;"	class	line:368	namespace:std	inherits:locale::facet,time_base
char_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      typedef _CharT			char_type; $/;"	typedef	line:374	class:std::time_get	access:public
iter_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      typedef _InIter			iter_type; $/;"	typedef	line:375	class:std::time_get	access:public
id	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      static locale::id			id;$/;"	member	line:379	class:std::time_get	access:public
time_get	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      time_get(size_t __refs = 0)$/;"	function	line:389	class:std::time_get	access:public	signature:(size_t __refs = 0)	returns:explicit 
date_order	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      date_order()  const$/;"	function	line:406	class:std::time_get	access:public	signature:() const	returns:dateorder 
get_time	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      get_time(iter_type __beg, iter_type __end, ios_base& __io,$/;"	function	line:430	class:std::time_get	access:public	signature:(iter_type __beg, iter_type __end, ios_base& __io, ios_base::iostate& __err, tm* __tm) const	returns:iter_type 
get_date	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      get_date(iter_type __beg, iter_type __end, ios_base& __io,$/;"	function	line:455	class:std::time_get	access:public	signature:(iter_type __beg, iter_type __end, ios_base& __io, ios_base::iostate& __err, tm* __tm) const	returns:iter_type 
get_weekday	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      get_weekday(iter_type __beg, iter_type __end, ios_base& __io,$/;"	function	line:483	class:std::time_get	access:public	signature:(iter_type __beg, iter_type __end, ios_base& __io, ios_base::iostate& __err, tm* __tm) const	returns:iter_type 
get_monthname	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      get_monthname(iter_type __beg, iter_type __end, ios_base& __io,$/;"	function	line:512	class:std::time_get	access:public	signature:(iter_type __beg, iter_type __end, ios_base& __io, ios_base::iostate& __err, tm* __tm) const	returns:iter_type 
get_year	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      get_year(iter_type __beg, iter_type __end, ios_base& __io,$/;"	function	line:538	class:std::time_get	access:public	signature:(iter_type __beg, iter_type __end, ios_base& __io, ios_base::iostate& __err, tm* __tm) const	returns:iter_type 
get	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      iter_type get(iter_type __s, iter_type __end, ios_base& __io,$/;"	function	line:559	class:std::time_get	access:public	signature:(iter_type __s, iter_type __end, ios_base& __io, ios_base::iostate& __err, tm* __tm, char __format, char __modifier = 0) const	returns:inline iter_type 
get	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      iter_type get(iter_type __s, iter_type __end, ios_base& __io,$/;"	prototype	line:585	class:std::time_get	access:public	signature:(iter_type __s, iter_type __end, ios_base& __io, ios_base::iostate& __err, tm* __tm, const char_type* __fmt, const char_type* __fmtend) const	returns:iter_type 
~time_get	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      ~time_get() { }$/;"	function	line:593	class:std::time_get	access:protected	implementation:virtual	signature:()	returns:virtual 
do_date_order	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      do_date_order() const;$/;"	prototype	line:606	class:std::time_get	access:protected	implementation:virtual	signature:() const	returns:virtual dateorder 
do_get_time	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      do_get_time(iter_type __beg, iter_type __end, ios_base& __io,$/;"	prototype	line:624	class:std::time_get	access:protected	implementation:virtual	signature:(iter_type __beg, iter_type __end, ios_base& __io, ios_base::iostate& __err, tm* __tm) const	returns:virtual iter_type 
do_get_date	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      do_get_date(iter_type __beg, iter_type __end, ios_base& __io,$/;"	prototype	line:643	class:std::time_get	access:protected	implementation:virtual	signature:(iter_type __beg, iter_type __end, ios_base& __io, ios_base::iostate& __err, tm* __tm) const	returns:virtual iter_type 
do_get_weekday	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      do_get_weekday(iter_type __beg, iter_type __end, ios_base&,$/;"	prototype	line:662	class:std::time_get	access:protected	implementation:virtual	signature:(iter_type __beg, iter_type __end, ios_base&, ios_base::iostate& __err, tm* __tm) const	returns:virtual iter_type 
do_get_monthname	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      do_get_monthname(iter_type __beg, iter_type __end, ios_base&,$/;"	prototype	line:681	class:std::time_get	access:protected	implementation:virtual	signature:(iter_type __beg, iter_type __end, ios_base&, ios_base::iostate& __err, tm* __tm) const	returns:virtual iter_type 
do_get_year	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      do_get_year(iter_type __beg, iter_type __end, ios_base& __io,$/;"	prototype	line:700	class:std::time_get	access:protected	implementation:virtual	signature:(iter_type __beg, iter_type __end, ios_base& __io, ios_base::iostate& __err, tm* __tm) const	returns:virtual iter_type 
do_get	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      do_get(iter_type __s, iter_type __end, ios_base& __f,$/;"	prototype	line:725	class:std::time_get	access:protected	implementation:virtual	signature:(iter_type __s, iter_type __end, ios_base& __f, ios_base::iostate& __err, tm* __tm, char __format, char __modifier) const	returns:virtual iter_type 
_M_extract_num	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      _M_extract_num(iter_type __beg, iter_type __end, int& __member,$/;"	prototype	line:732	class:std::time_get	access:protected	signature:(iter_type __beg, iter_type __end, int& __member, int __min, int __max, size_t __len, ios_base& __io, ios_base::iostate& __err) const	returns:iter_type 
_M_extract_name	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      _M_extract_name(iter_type __beg, iter_type __end, int& __member,$/;"	prototype	line:738	class:std::time_get	access:protected	signature:(iter_type __beg, iter_type __end, int& __member, const _CharT** __names, size_t __indexlen, ios_base& __io, ios_base::iostate& __err) const	returns:iter_type 
_M_extract_wday_or_month	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      _M_extract_wday_or_month(iter_type __beg, iter_type __end, int& __member,$/;"	prototype	line:744	class:std::time_get	access:protected	signature:(iter_type __beg, iter_type __end, int& __member, const _CharT** __names, size_t __indexlen, ios_base& __io, ios_base::iostate& __err) const	returns:iter_type 
_M_extract_via_format	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      _M_extract_via_format(iter_type __beg, iter_type __end, ios_base& __io,$/;"	prototype	line:750	class:std::time_get	access:protected	signature:(iter_type __beg, iter_type __end, ios_base& __io, ios_base::iostate& __err, tm* __tm, const _CharT* __format) const	returns:iter_type 
id	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  template<typename _CharT, typename _InIter>     locale::id time_get<_CharT, _InIter>::id; $/;"	member	line:756	class:std::time_get
time_get_byname	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  template<typename _CharT, typename _InIter>     class time_get_byname : public time_get<_CharT, _InIter> $/;"	class	line:760	namespace:std	inherits:time_get<_CharT,_InIter>
char_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      typedef _CharT			char_type; $/;"	typedef	line:764	class:std::time_get_byname	access:public
iter_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      typedef _InIter			iter_type; $/;"	typedef	line:765	class:std::time_get_byname	access:public
time_get_byname	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      time_get_byname(const char*, size_t __refs = 0)$/;"	function	line:768	class:std::time_get_byname	access:public	signature:(const char*, size_t __refs = 0)	returns:explicit 
time_get_byname	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      time_get_byname(const string& __s, size_t __refs = 0)$/;"	function	line:773	class:std::time_get_byname	access:public	signature:(const string& __s, size_t __refs = 0)	returns:explicit 
~time_get_byname	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      ~time_get_byname() { }$/;"	function	line:779	class:std::time_get_byname	access:protected	implementation:virtual	signature:()	returns:virtual 
time_put	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^    class time_put : public locale::facet$/;"	class	line:797	namespace:std	inherits:locale::facet
char_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      typedef _CharT			char_type; $/;"	typedef	line:803	class:std::time_put	access:public
iter_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      typedef _OutIter			iter_type; $/;"	typedef	line:804	class:std::time_put	access:public
id	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      static locale::id			id;$/;"	member	line:808	class:std::time_put	access:public
time_put	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      time_put(size_t __refs = 0)$/;"	function	line:818	class:std::time_put	access:public	signature:(size_t __refs = 0)	returns:explicit 
put	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      put(iter_type __s, ios_base& __io, char_type __fill, const tm* __tm,$/;"	prototype	line:837	class:std::time_put	access:public	signature:(iter_type __s, ios_base& __io, char_type __fill, const tm* __tm, const _CharT* __beg, const _CharT* __end) const	returns:iter_type 
put	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      put(iter_type __s, ios_base& __io, char_type __fill,$/;"	function	line:857	class:std::time_put	access:public	signature:(iter_type __s, ios_base& __io, char_type __fill, const tm* __tm, char __format, char __mod = 0) const	returns:iter_type 
~time_put	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      ~time_put()$/;"	function	line:864	class:std::time_put	access:protected	implementation:virtual	signature:()	returns:virtual 
do_put	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      do_put(iter_type __s, ios_base& __io, char_type __fill, const tm* __tm,$/;"	prototype	line:884	class:std::time_put	access:protected	implementation:virtual	signature:(iter_type __s, ios_base& __io, char_type __fill, const tm* __tm, char __format, char __mod) const	returns:virtual iter_type 
id	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  template<typename _CharT, typename _OutIter>     locale::id time_put<_CharT, _OutIter>::id; $/;"	member	line:889	class:std::time_put
time_put_byname	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  template<typename _CharT, typename _OutIter>     class time_put_byname : public time_put<_CharT, _OutIter> $/;"	class	line:893	namespace:std	inherits:time_put<_CharT,_OutIter>
char_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      typedef _CharT			char_type; $/;"	typedef	line:897	class:std::time_put_byname	access:public
iter_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      typedef _OutIter			iter_type; $/;"	typedef	line:898	class:std::time_put_byname	access:public
time_put_byname	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      time_put_byname(const char*, size_t __refs = 0)$/;"	function	line:901	class:std::time_put_byname	access:public	signature:(const char*, size_t __refs = 0)	returns:explicit 
time_put_byname	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      time_put_byname(const string& __s, size_t __refs = 0)$/;"	function	line:907	class:std::time_put_byname	access:public	signature:(const string& __s, size_t __refs = 0)	returns:explicit 
~time_put_byname	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      ~time_put_byname() { }$/;"	function	line:913	class:std::time_put_byname	access:protected	implementation:virtual	signature:()	returns:virtual 
money_base	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  class money_base$/;"	class	line:928	namespace:std
part	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^    enum part { none, space, symbol, sign, value };$/;"	enum	line:931	class:std::money_base	access:public
none	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^    enum part { none, space, symbol, sign, value };$/;"	enumerator	line:931	enum:std::money_base::part
space	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^    enum part { none, space, symbol, sign, value };$/;"	enumerator	line:931	enum:std::money_base::part
symbol	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^    enum part { none, space, symbol, sign, value };$/;"	enumerator	line:931	enum:std::money_base::part
sign	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^    enum part { none, space, symbol, sign, value };$/;"	enumerator	line:931	enum:std::money_base::part
value	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^    enum part { none, space, symbol, sign, value };$/;"	enumerator	line:931	enum:std::money_base::part
pattern	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^    struct pattern { char field[4]; };$/;"	struct	line:932	class:std::money_base	access:public
field	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^    struct pattern { char field[4]; };$/;"	member	line:932	struct:std::money_base::pattern	access:public
_S_default_pattern	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^    static const pattern _S_default_pattern;$/;"	member	line:934	class:std::money_base	access:public
_S_minus	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      _S_minus,$/;"	enumerator	line:938	enum:std::money_base::__anon1
_S_zero	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      _S_zero,$/;"	enumerator	line:939	enum:std::money_base::__anon1
_S_end	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      _S_end = 11$/;"	enumerator	line:940	enum:std::money_base::__anon1
_S_atoms	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^    static const char* _S_atoms;$/;"	member	line:945	class:std::money_base	access:public
_S_construct_pattern	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^    _S_construct_pattern(char __precedes, char __space, char __posn) throw ();$/;"	prototype	line:950	class:std::money_base	access:public	signature:(char __precedes, char __space, char __posn)	returns:pattern 
__moneypunct_cache	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  template<typename _CharT, bool _Intl>     struct __moneypunct_cache : public locale::facet $/;"	struct	line:954	namespace:std	inherits:locale::facet
_M_grouping	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const char*			_M_grouping;$/;"	member	line:956	struct:std::__moneypunct_cache	access:public
_M_grouping_size	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      size_t                            _M_grouping_size;$/;"	member	line:957	struct:std::__moneypunct_cache	access:public
_M_use_grouping	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      bool				_M_use_grouping;$/;"	member	line:958	struct:std::__moneypunct_cache	access:public
_M_decimal_point	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      _CharT				_M_decimal_point;$/;"	member	line:959	struct:std::__moneypunct_cache	access:public
_M_thousands_sep	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      _CharT				_M_thousands_sep;$/;"	member	line:960	struct:std::__moneypunct_cache	access:public
_M_curr_symbol	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_curr_symbol;$/;"	member	line:961	struct:std::__moneypunct_cache	access:public
_M_curr_symbol_size	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      size_t                            _M_curr_symbol_size;$/;"	member	line:962	struct:std::__moneypunct_cache	access:public
_M_positive_sign	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_positive_sign;$/;"	member	line:963	struct:std::__moneypunct_cache	access:public
_M_positive_sign_size	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      size_t                            _M_positive_sign_size;$/;"	member	line:964	struct:std::__moneypunct_cache	access:public
_M_negative_sign	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const _CharT*			_M_negative_sign;$/;"	member	line:965	struct:std::__moneypunct_cache	access:public
_M_negative_sign_size	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      size_t                            _M_negative_sign_size;$/;"	member	line:966	struct:std::__moneypunct_cache	access:public
_M_frac_digits	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      int				_M_frac_digits;$/;"	member	line:967	struct:std::__moneypunct_cache	access:public
_M_pos_format	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      money_base::pattern		_M_pos_format;$/;"	member	line:968	struct:std::__moneypunct_cache	access:public
_M_neg_format	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      money_base::pattern	        _M_neg_format;$/;"	member	line:969	struct:std::__moneypunct_cache	access:public
_M_atoms	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      _CharT				_M_atoms[money_base::_S_end];$/;"	member	line:974	struct:std::__moneypunct_cache	access:public
_M_allocated	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      bool				_M_allocated;$/;"	member	line:976	struct:std::__moneypunct_cache	access:public
__moneypunct_cache	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      __moneypunct_cache(size_t __refs = 0) : facet(__refs),$/;"	function	line:978	struct:std::__moneypunct_cache	access:public	signature:(size_t __refs = 0)
~__moneypunct_cache	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      ~__moneypunct_cache();$/;"	prototype	line:989	struct:std::__moneypunct_cache	access:public	signature:()
_M_cache	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      _M_cache(const locale& __loc);$/;"	prototype	line:992	struct:std::__moneypunct_cache	access:public	signature:(const locale& __loc)	returns:void 
operator =	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      operator=(const __moneypunct_cache&);$/;"	prototype	line:996	struct:std::__moneypunct_cache	access:private	signature:(const __moneypunct_cache&)	returns:__moneypunct_cache 
__moneypunct_cache	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      __moneypunct_cache(const __moneypunct_cache&);$/;"	prototype	line:999	struct:std::__moneypunct_cache	access:private	signature:(const __moneypunct_cache&)	returns:explicit 
~__moneypunct_cache	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  template<typename _CharT, bool _Intl>     __moneypunct_cache<_CharT, _Intl>::~__moneypunct_cache() $/;"	function	line:1003	class:std::__moneypunct_cache	signature:()	returns:template __moneypunct_cache <_CharT, _Intl> :: 
moneypunct	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^    class moneypunct : public locale::facet, public money_base$/;"	class	line:1024	namespace:std	inherits:locale::facet,money_base
char_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      typedef _CharT			char_type; $/;"	typedef	line:1030	class:std::moneypunct	access:public
string_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      typedef basic_string<_CharT>	string_type; $/;"	typedef	line:1031	class:std::moneypunct	access:public
__cache_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      typedef __moneypunct_cache<_CharT, _Intl>     __cache_type; $/;"	typedef	line:1033	class:std::moneypunct	access:public
_M_data	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      __cache_type*			_M_data;$/;"	member	line:1036	class:std::moneypunct	access:private
intl	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      static const bool			intl = _Intl;$/;"	member	line:1041	class:std::moneypunct	access:public
id	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      static locale::id			id;$/;"	member	line:1043	class:std::moneypunct	access:public
moneypunct	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      moneypunct(size_t __refs = 0)$/;"	function	line:1053	class:std::moneypunct	access:public	signature:(size_t __refs = 0)	returns:explicit 
moneypunct	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      moneypunct(__cache_type* __cache, size_t __refs = 0)$/;"	function	line:1066	class:std::moneypunct	access:public	signature:(__cache_type* __cache, size_t __refs = 0)	returns:explicit 
moneypunct	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      moneypunct(__c_locale __cloc, const char* __s, size_t __refs = 0)$/;"	function	line:1081	class:std::moneypunct	access:public	signature:(__c_locale __cloc, const char* __s, size_t __refs = 0)	returns:explicit 
decimal_point	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      decimal_point() const$/;"	function	line:1095	class:std::moneypunct	access:public	signature:() const	returns:char_type 
thousands_sep	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      thousands_sep() const$/;"	function	line:1108	class:std::moneypunct	access:public	signature:() const	returns:char_type 
grouping	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      grouping() const$/;"	function	line:1138	class:std::moneypunct	access:public	signature:() const	returns:string 
curr_symbol	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      curr_symbol() const$/;"	function	line:1151	class:std::moneypunct	access:public	signature:() const	returns:string_type 
positive_sign	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      positive_sign() const$/;"	function	line:1168	class:std::moneypunct	access:public	signature:() const	returns:string_type 
negative_sign	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      negative_sign() const$/;"	function	line:1185	class:std::moneypunct	access:public	signature:() const	returns:string_type 
frac_digits	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      frac_digits() const$/;"	function	line:1201	class:std::moneypunct	access:public	signature:() const	returns:int 
pos_format	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      pos_format() const$/;"	function	line:1237	class:std::moneypunct	access:public	signature:() const	returns:pattern 
neg_format	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      neg_format() const$/;"	function	line:1241	class:std::moneypunct	access:public	signature:() const	returns:pattern 
~moneypunct	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      ~moneypunct();$/;"	prototype	line:1248	class:std::moneypunct	access:protected	implementation:virtual	signature:()	returns:virtual 
do_decimal_point	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      do_decimal_point() const$/;"	function	line:1259	class:std::moneypunct	access:protected	implementation:virtual	signature:() const	returns:virtual char_type 
do_thousands_sep	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      do_thousands_sep() const$/;"	function	line:1271	class:std::moneypunct	access:protected	implementation:virtual	signature:() const	returns:virtual char_type 
do_grouping	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      do_grouping() const$/;"	function	line:1284	class:std::moneypunct	access:protected	implementation:virtual	signature:() const	returns:virtual string 
do_curr_symbol	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      do_curr_symbol()   const$/;"	function	line:1297	class:std::moneypunct	access:protected	implementation:virtual	signature:() const	returns:virtual string_type 
do_positive_sign	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      do_positive_sign() const$/;"	function	line:1310	class:std::moneypunct	access:protected	implementation:virtual	signature:() const	returns:virtual string_type 
do_negative_sign	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      do_negative_sign() const$/;"	function	line:1323	class:std::moneypunct	access:protected	implementation:virtual	signature:() const	returns:virtual string_type 
do_frac_digits	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      do_frac_digits() const$/;"	function	line:1337	class:std::moneypunct	access:protected	implementation:virtual	signature:() const	returns:virtual int 
do_pos_format	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      do_pos_format() const$/;"	function	line:1351	class:std::moneypunct	access:protected	implementation:virtual	signature:() const	returns:virtual pattern 
do_neg_format	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      do_neg_format() const$/;"	function	line:1365	class:std::moneypunct	access:protected	implementation:virtual	signature:() const	returns:virtual pattern 
_M_initialize_moneypunct	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^       _M_initialize_moneypunct(__c_locale __cloc = 0,$/;"	prototype	line:1370	class:std::moneypunct	access:protected	signature:(__c_locale __cloc = 0, const char* __name = 0)	returns:void 
id	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  template<typename _CharT, bool _Intl>     locale::id moneypunct<_CharT, _Intl>::id; $/;"	member	line:1375	class:std::moneypunct
intl	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  template<typename _CharT, bool _Intl>     const bool moneypunct<_CharT, _Intl>::intl; $/;"	member	line:1378	class:std::moneypunct
~moneypunct	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  template<>     moneypunct<char, true>::~moneypunct(); $/;"	prototype	line:1381	class:std::moneypunct	signature:()	returns:template moneypunct <char, true> :: 
~moneypunct	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  template<>     moneypunct<char, false>::~moneypunct(); $/;"	prototype	line:1384	class:std::moneypunct	signature:()	returns:template moneypunct <char, false> :: 
_M_initialize_moneypunct	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  template<>     void     moneypunct<char, true>::_M_initialize_moneypunct(__c_locale, const char*); $/;"	prototype	line:1388	class:std::moneypunct	signature:(__c_locale, const char*)	returns:template void moneypunct <char, true> :: 
_M_initialize_moneypunct	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  template<>     void     moneypunct<char, false>::_M_initialize_moneypunct(__c_locale, const char*); $/;"	prototype	line:1392	class:std::moneypunct	signature:(__c_locale, const char*)	returns:template void moneypunct <char, false> :: 
~moneypunct	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  template<>     moneypunct<wchar_t, true>::~moneypunct(); $/;"	prototype	line:1396	class:std::moneypunct	signature:()	returns:template moneypunct <wchar_t, true> :: 
~moneypunct	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  template<>     moneypunct<wchar_t, false>::~moneypunct(); $/;"	prototype	line:1399	class:std::moneypunct	signature:()	returns:template moneypunct <wchar_t, false> :: 
_M_initialize_moneypunct	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  template<>     void     moneypunct<wchar_t, true>::_M_initialize_moneypunct(__c_locale, $/;"	prototype	line:1403	class:std::moneypunct	signature:(__c_locale, const char*)	returns:template void moneypunct <wchar_t, true> :: 
_M_initialize_moneypunct	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  template<>     void     moneypunct<wchar_t, false>::_M_initialize_moneypunct(__c_locale, $/;"	prototype	line:1408	class:std::moneypunct	signature:(__c_locale, const char*)	returns:template void moneypunct <wchar_t, false> :: 
moneypunct_byname	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  template<typename _CharT, bool _Intl>     class moneypunct_byname : public moneypunct<_CharT, _Intl> $/;"	class	line:1414	namespace:std	inherits:moneypunct<_CharT,_Intl>
char_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      typedef _CharT			char_type; $/;"	typedef	line:1417	class:std::moneypunct_byname	access:public
string_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      typedef basic_string<_CharT>	string_type; $/;"	typedef	line:1418	class:std::moneypunct_byname	access:public
intl	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      static const bool intl = _Intl;$/;"	member	line:1420	class:std::moneypunct_byname	access:public
moneypunct_byname	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      moneypunct_byname(const char* __s, size_t __refs = 0)$/;"	function	line:1423	class:std::moneypunct_byname	access:public	signature:(const char* __s, size_t __refs = 0)	returns:explicit 
moneypunct_byname	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      moneypunct_byname(const string& __s, size_t __refs = 0)$/;"	function	line:1438	class:std::moneypunct_byname	access:public	signature:(const string& __s, size_t __refs = 0)	returns:explicit 
~moneypunct_byname	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      ~moneypunct_byname() { }$/;"	function	line:1444	class:std::moneypunct_byname	access:protected	implementation:virtual	signature:()	returns:virtual 
intl	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  template<typename _CharT, bool _Intl>     const bool moneypunct_byname<_CharT, _Intl>::intl; $/;"	member	line:1448	class:std::moneypunct_byname
money_get	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^    class money_get : public locale::facet$/;"	class	line:1468	namespace:std	inherits:locale::facet
char_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      typedef _CharT			char_type; $/;"	typedef	line:1474	class:std::money_get	access:public
iter_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      typedef _InIter			iter_type; $/;"	typedef	line:1475	class:std::money_get	access:public
string_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      typedef basic_string<_CharT>	string_type; $/;"	typedef	line:1476	class:std::money_get	access:public
id	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      static locale::id			id;$/;"	member	line:1480	class:std::money_get	access:public
money_get	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      money_get(size_t __refs = 0) : facet(__refs) { }$/;"	function	line:1490	class:std::money_get	access:public	signature:(size_t __refs = 0)	returns:explicit 
get	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      get(iter_type __s, iter_type __end, bool __intl, ios_base& __io,$/;"	function	line:1520	class:std::money_get	access:public	signature:(iter_type __s, iter_type __end, bool __intl, ios_base& __io, ios_base::iostate& __err, long double& __units) const	returns:iter_type 
get	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      get(iter_type __s, iter_type __end, bool __intl, ios_base& __io,$/;"	function	line:1551	class:std::money_get	access:public	signature:(iter_type __s, iter_type __end, bool __intl, ios_base& __io, ios_base::iostate& __err, string_type& __digits) const	returns:iter_type 
~money_get	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      ~money_get() { }$/;"	function	line:1558	class:std::money_get	access:protected	implementation:virtual	signature:()	returns:virtual 
__do_get	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      __do_get(iter_type __s, iter_type __end, bool __intl, ios_base& __io,$/;"	prototype	line:1571	class:std::money_get	access:protected	implementation:virtual	signature:(iter_type __s, iter_type __end, bool __intl, ios_base& __io, ios_base::iostate& __err, double& __units) const	returns:virtual iter_type 
do_get	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      do_get(iter_type __s, iter_type __end, bool __intl, ios_base& __io,$/;"	prototype	line:1575	class:std::money_get	access:protected	implementation:virtual	signature:(iter_type __s, iter_type __end, bool __intl, ios_base& __io, ios_base::iostate& __err, long double& __units) const	returns:virtual iter_type 
do_get	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      do_get(iter_type __s, iter_type __end, bool __intl, ios_base& __io,$/;"	prototype	line:1587	class:std::money_get	access:protected	implementation:virtual	signature:(iter_type __s, iter_type __end, bool __intl, ios_base& __io, ios_base::iostate& __err, string_type& __digits) const	returns:virtual iter_type 
do_get	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      do_get(iter_type __s, iter_type __end, bool __intl, ios_base& __io,$/;"	prototype	line:1594	class:std::money_get	access:protected	implementation:virtual	signature:(iter_type __s, iter_type __end, bool __intl, ios_base& __io, ios_base::iostate& __err, long double& __units) const	returns:virtual iter_type 
_M_extract	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      template<bool _Intl>         iter_type         _M_extract(iter_type __s, iter_type __end, ios_base& __io, $/;"	prototype	line:1600	class:std::money_get	access:protected	signature:(iter_type __s, iter_type __end, ios_base& __io, ios_base::iostate& __err, string& __digits) const	returns:template iter_type 
id	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  template<typename _CharT, typename _InIter>     locale::id money_get<_CharT, _InIter>::id; $/;"	member	line:1605	class:std::money_get
money_put	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  template<typename _CharT, typename _OutIter>     class money_put : public locale::facet $/;"	class	line:1621	namespace:std	inherits:locale::facet
char_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      typedef _CharT			char_type; $/;"	typedef	line:1626	class:std::money_put	access:public
iter_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      typedef _OutIter			iter_type; $/;"	typedef	line:1627	class:std::money_put	access:public
string_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      typedef basic_string<_CharT>	string_type; $/;"	typedef	line:1628	class:std::money_put	access:public
id	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      static locale::id			id;$/;"	member	line:1632	class:std::money_put	access:public
money_put	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      money_put(size_t __refs = 0) : facet(__refs) { }$/;"	function	line:1642	class:std::money_put	access:public	signature:(size_t __refs = 0)	returns:explicit 
put	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      put(iter_type __s, bool __intl, ios_base& __io,$/;"	function	line:1662	class:std::money_put	access:public	signature:(iter_type __s, bool __intl, ios_base& __io, char_type __fill, long double __units) const	returns:iter_type 
put	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      put(iter_type __s, bool __intl, ios_base& __io,$/;"	function	line:1685	class:std::money_put	access:public	signature:(iter_type __s, bool __intl, ios_base& __io, char_type __fill, const string_type& __digits) const	returns:iter_type 
~money_put	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      ~money_put() { }$/;"	function	line:1692	class:std::money_put	access:protected	implementation:virtual	signature:()	returns:virtual 
__do_put	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      __do_put(iter_type __s, bool __intl, ios_base& __io, char_type __fill,$/;"	prototype	line:1716	class:std::money_put	access:protected	implementation:virtual	signature:(iter_type __s, bool __intl, ios_base& __io, char_type __fill, double __units) const	returns:virtual iter_type 
do_put	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      do_put(iter_type __s, bool __intl, ios_base& __io, char_type __fill,$/;"	prototype	line:1720	class:std::money_put	access:protected	implementation:virtual	signature:(iter_type __s, bool __intl, ios_base& __io, char_type __fill, long double __units) const	returns:virtual iter_type 
do_put	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      do_put(iter_type __s, bool __intl, ios_base& __io, char_type __fill,$/;"	prototype	line:1744	class:std::money_put	access:protected	implementation:virtual	signature:(iter_type __s, bool __intl, ios_base& __io, char_type __fill, const string_type& __digits) const	returns:virtual iter_type 
do_put	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      do_put(iter_type __s, bool __intl, ios_base& __io, char_type __fill,$/;"	prototype	line:1751	class:std::money_put	access:protected	implementation:virtual	signature:(iter_type __s, bool __intl, ios_base& __io, char_type __fill, long double __units) const	returns:virtual iter_type 
_M_insert	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      template<bool _Intl>         iter_type         _M_insert(iter_type __s, ios_base& __io, char_type __fill, $/;"	prototype	line:1757	class:std::money_put	access:protected	signature:(iter_type __s, ios_base& __io, char_type __fill, const string_type& __digits) const	returns:template iter_type 
id	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  template<typename _CharT, typename _OutIter>     locale::id money_put<_CharT, _OutIter>::id; $/;"	member	line:1762	class:std::money_put
messages_base	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  struct messages_base$/;"	struct	line:1770	namespace:std
catalog	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^    typedef int catalog; $/;"	typedef	line:1772	struct:std::messages_base	access:public
messages	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^    class messages : public locale::facet, public messages_base$/;"	class	line:1799	namespace:std	inherits:locale::facet,messages_base
char_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      typedef _CharT			char_type; $/;"	typedef	line:1805	class:std::messages	access:public
string_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      typedef basic_string<_CharT>	string_type; $/;"	typedef	line:1806	class:std::messages	access:public
_M_c_locale_messages	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      __c_locale			_M_c_locale_messages;$/;"	member	line:1812	class:std::messages	access:protected
_M_name_messages	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      const char*			_M_name_messages;$/;"	member	line:1813	class:std::messages	access:protected
id	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      static locale::id			id;$/;"	member	line:1817	class:std::messages	access:public
messages	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      messages(size_t __refs = 0);$/;"	prototype	line:1827	class:std::messages	access:public	signature:(size_t __refs = 0)	returns:explicit 
messages	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      messages(__c_locale __cloc, const char* __s, size_t __refs = 0);$/;"	prototype	line:1841	class:std::messages	access:public	signature:(__c_locale __cloc, const char* __s, size_t __refs = 0)	returns:explicit 
open	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      open(const basic_string<char>& __s, const locale& __loc) const$/;"	function	line:1854	class:std::messages	access:public	signature:(const basic_string<char>& __s, const locale& __loc) const	returns:catalog 
open	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      open(const basic_string<char>&, const locale&, const char*) const;$/;"	prototype	line:1872	class:std::messages	access:public	signature:(const basic_string<char>&, const locale&, const char*) const	returns:catalog 
get	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      get(catalog __c, int __set, int __msgid, const string_type& __s) const$/;"	function	line:1890	class:std::messages	access:public	signature:(catalog __c, int __set, int __msgid, const string_type& __s) const	returns:string_type 
close	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      close(catalog __c) const$/;"	function	line:1901	class:std::messages	access:public	signature:(catalog __c) const	returns:void 
~messages	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      ~messages();$/;"	prototype	line:1907	class:std::messages	access:protected	implementation:virtual	signature:()	returns:virtual 
do_open	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      do_open(const basic_string<char>&, const locale&) const;$/;"	prototype	line:1921	class:std::messages	access:protected	implementation:virtual	signature:(const basic_string<char>&, const locale&) const	returns:virtual catalog 
do_get	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      do_get(catalog, int, int, const string_type& __dfault) const;$/;"	prototype	line:1940	class:std::messages	access:protected	implementation:virtual	signature:(catalog, int, int, const string_type& __dfault) const	returns:virtual string_type 
do_close	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      do_close(catalog) const;$/;"	prototype	line:1948	class:std::messages	access:protected	implementation:virtual	signature:(catalog) const	returns:virtual void 
_M_convert_to_char	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      _M_convert_to_char(const string_type& __msg) const$/;"	function	line:1952	class:std::messages	access:protected	signature:(const string_type& __msg) const	returns:char 
_M_convert_from_char	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      _M_convert_from_char(char*) const$/;"	function	line:1960	class:std::messages	access:protected	signature:(char*) const	returns:string_type 
id	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  template<typename _CharT>     locale::id messages<_CharT>::id; $/;"	member	line:1968	class:std::messages
do_get	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  template<>     string     messages<char>::do_get(catalog, int, int, const string&) const; $/;"	prototype	line:1973	class:std::messages	signature:(catalog, int, int, const string&) const	returns:template string messages <char> :: 
do_get	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^  template<>     wstring     messages<wchar_t>::do_get(catalog, int, int, const wstring&) const; $/;"	prototype	line:1978	class:std::messages	signature:(catalog, int, int, const wstring&) const	returns:template wstring messages <wchar_t> :: 
messages_byname	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^   template<typename _CharT>     class messages_byname : public messages<_CharT> $/;"	class	line:1983	namespace:std	inherits:messages<_CharT>
char_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      typedef _CharT			char_type; $/;"	typedef	line:1986	class:std::messages_byname	access:public
string_type	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      typedef basic_string<_CharT>	string_type; $/;"	typedef	line:1987	class:std::messages_byname	access:public
messages_byname	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      messages_byname(const char* __s, size_t __refs = 0);$/;"	prototype	line:1990	class:std::messages_byname	access:public	signature:(const char* __s, size_t __refs = 0)	returns:explicit 
messages_byname	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      messages_byname(const string& __s, size_t __refs = 0)$/;"	function	line:1994	class:std::messages_byname	access:public	signature:(const string& __s, size_t __refs = 0)	returns:explicit 
~messages_byname	C:\MinGW\mingw64\lib\gcc\x86_64-w64-mingw32\8.1.0\include\c++\bits\locale_facets_nonio.h	/^      ~messages_byname()$/;"	function	line:2000	class:std::messages_byname	access:protected	implementation:virtual	signature:()	returns:virtual 



















